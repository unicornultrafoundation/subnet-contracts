{
  "id": "546b091f90e4949aa3e28d12246ca0c5",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.20",
  "solcLongVersion": "0.8.20+commit.a1b79de6",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/SubnetStakingPool.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\ncontract SubnetStakingPool is Ownable {\n    IERC20Metadata public immutable stakingToken;\n    IERC20Metadata public immutable rewardToken; // Reward token to be distributed\n\n    uint256 public rewardRatePerSecond; // Reward rate in tokens per second\n    uint256 public totalStaked; // Total tokens staked in the pool\n    uint256 public lastRewardTime; // Timestamp of the last reward update\n    uint256 public rewardPerTokenStored; // Accumulated reward per token\n    uint256 public PRECISION_FACTOR; // The precision factor\n\n    uint256 public startTime; // Staking and rewards start time\n    uint256 public endTime; // Staking and rewards end time\n\n    mapping(address => uint256) public userStaked; // Staked amount per user\n    mapping(address => uint256) public userRewardPerTokenPaid; // Reward debt per user\n    mapping(address => uint256) public userRewards; // Rewards available for withdrawal\n\n    event Staked(address indexed user, uint256 amount);\n    event Withdrawn(address indexed user, uint256 amount);\n    event RewardClaimed(address indexed user, uint256 reward);\n    event RewardRateUpdated(uint256 newRate);\n    event EndTimeUpdated(uint256 newEndTime);\n\n    constructor(\n        address initialOwner,\n        IERC20Metadata _stakingToken,\n        IERC20Metadata _rewardToken,\n        uint256 _rewardRatePerSecond,\n        uint256 _startTime,\n        uint256 _endTime\n    ) Ownable(initialOwner) {\n        require(_startTime < _endTime, \"Start time must be before end time\");\n\n        stakingToken = _stakingToken;\n        rewardToken = _rewardToken;\n        rewardRatePerSecond = _rewardRatePerSecond;\n        startTime = _startTime;\n        endTime = _endTime;\n        lastRewardTime = _startTime;\n\n        uint256 decimalsRewardToken = rewardToken == IERC20Metadata(address(0))\n        ? 18\n        : uint256(rewardToken.decimals());\n        require(decimalsRewardToken < 30, \"Must be inferior to 30\");\n\n        PRECISION_FACTOR = uint256(10**(uint256(30) - decimalsRewardToken));\n    }\n\n    /// @notice Updates the reward calculations for all users\n    modifier updateReward(address account) {\n        rewardPerTokenStored = rewardPerToken();\n        lastRewardTime = block.timestamp;\n\n        if (account != address(0)) {\n            userRewards[account] = earned(account);\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\n        }\n        _;\n    }\n\n    /// @notice Ensures the function is called within the staking period\n    modifier withinStakingPeriod() {\n        require(block.timestamp >= startTime, \"Staking not started yet\");\n        require(block.timestamp <= endTime, \"Staking period ended\");\n        _;\n    }\n\n    /// @notice Calculates the reward per token\n    /// @return The reward per token scaled by 1e18\n    function rewardPerToken() public view returns (uint256) {\n        if (totalStaked == 0 || block.timestamp < startTime) {\n            return rewardPerTokenStored;\n        }\n\n        uint256 applicableEndTime = block.timestamp > endTime ? endTime : block.timestamp;\n        if (applicableEndTime <= lastRewardTime) {\n            return rewardPerTokenStored;\n        }\n\n        return\n            rewardPerTokenStored +\n            ((applicableEndTime - lastRewardTime) * rewardRatePerSecond * PRECISION_FACTOR) / totalStaked;\n    }\n\n\n    /// @notice Calculates the earned rewards for a user\n    /// @param account The address of the user\n    /// @return The total rewards earned by the user\n    function earned(address account) public view returns (uint256) {\n        return\n            ((userStaked[account] * (rewardPerToken() - userRewardPerTokenPaid[account])) / PRECISION_FACTOR) +\n            userRewards[account];\n    }\n\n    /// @notice Allows a user to stake tokens\n    /// @param amount The amount of tokens to stake\n    function stake(uint256 amount) external withinStakingPeriod updateReward(msg.sender) {\n        require(amount > 0, \"Cannot stake 0\");\n        totalStaked += amount;\n        userStaked[msg.sender] += amount;\n\n        stakingToken.transferFrom(msg.sender, address(this), amount);\n        emit Staked(msg.sender, amount);\n    }\n\n    /// @notice Allows a user to withdraw staked tokens\n    /// @param amount The amount of tokens to withdraw\n    function withdraw(uint256 amount) external updateReward(msg.sender) {\n        require(amount > 0, \"Cannot withdraw 0\");\n        require(userStaked[msg.sender] >= amount, \"Withdraw amount exceeds staked\");\n\n        totalStaked -= amount;\n        userStaked[msg.sender] -= amount;\n\n        stakingToken.transfer(msg.sender, amount);\n        emit Withdrawn(msg.sender, amount);\n    }\n\n    /// @notice Allows a user to claim their rewards\n    function claimReward() external updateReward(msg.sender) {\n        uint256 reward = userRewards[msg.sender];\n        require(reward > 0, \"No rewards to claim\");\n        userRewards[msg.sender] = 0;\n        \n        if (address(rewardToken) == address(0)) {\n            (bool success, ) = msg.sender.call{value: reward}(\"\");\n            require(success, \"ETH transfer failed\");\n        } else {\n            require(\n                rewardToken.balanceOf(address(this)) >= reward,\n                \"Insufficient reward token balance\"\n            );\n            rewardToken.transfer(msg.sender, reward);\n        }\n\n        emit RewardClaimed(msg.sender, reward);\n    }\n\n        /// @notice Allows the owner to update the end time\n    /// @param newEndTime The new end time for staking and rewards\n    function updateEndTime(uint256 newEndTime) external onlyOwner {\n        require(newEndTime > block.timestamp, \"End time must be in the future\");\n        require(newEndTime > startTime, \"End time must be after start time\");\n        endTime = newEndTime;\n        emit EndTimeUpdated(newEndTime);\n    }\n\n    /// @notice Allows the owner to update the reward rate\n    /// @param newRewardRate The new reward rate per second\n    function updateRewardRate(uint256 newRewardRate) external onlyOwner updateReward(address(0)){\n        require(newRewardRate > 0, \"Reward rate must be greater than 0\");\n        rewardRatePerSecond = newRewardRate;\n        emit RewardRateUpdated(newRewardRate);\n    }\n\n    /// @notice Allows the owner to withdraw tokens sent to the contract by mistake\n    /// @param token The address of the token to withdraw\n    /// @param amount The amount of the token to withdraw\n    /// @param to The address to send the withdrawn tokens to\n    function recoverERC20(\n        address token,\n        uint256 amount,\n        address to\n    ) external onlyOwner {\n        require(token != address(stakingToken), \"Cannot withdraw staking token\");\n        require(token != address(rewardToken), \"Cannot withdraw reward token\");\n        require(to != address(0), \"Invalid recipient address\");\n\n        IERC20(token).transfer(to, amount);\n    }\n\n    receive() external payable {}\n}\n"
      },
      "contracts/SubnetStakingPoolFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./SubnetStakingPool.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SubnetStakingPoolFactory is Ownable {\n    event PoolCreated(address indexed stakingToken, address indexed rewardToken, address poolAddress);\n\n    // Array to store all deployed pools\n    address[] public allPools;\n\n    constructor(\n        address initialOwner\n    ) Ownable(initialOwner) { }\n\n    /// @notice Deploys a new staking pool\n    /// @param stakingToken The address of the ERC20 token to be staked\n    /// @param rewardRatePerSecond Reward rate per second for the pool\n    /// @param startTime The start time of the staking pool\n    /// @param endTime The end time of the staking pool\n    /// @return The address of the newly deployed staking pool\n    function createPool(\n        IERC20 stakingToken,\n        IERC20 rewardToken,\n        uint256 rewardRatePerSecond,\n        uint256 startTime,\n        uint256 endTime\n    ) external onlyOwner returns (address) {\n        require(address(stakingToken) != address(0), \"Invalid staking token address\");\n        require(endTime > startTime, \"End time must be after start time\");\n\n        bytes32 salt = keccak256(abi.encodePacked(address(stakingToken), address(rewardToken), rewardRatePerSecond, startTime, endTime));\n        bytes memory bytecode = abi.encodePacked(\n            type(SubnetStakingPool).creationCode,\n            abi.encode(msg.sender, stakingToken, rewardToken, rewardRatePerSecond, startTime, endTime)\n        );\n\n        address poolAddress;\n        assembly {\n            poolAddress := create2(0, add(bytecode, 0x20), mload(bytecode), salt)\n            if iszero(poolAddress) {\n                revert(0, 0)\n            }\n        }\n\n        allPools.push(poolAddress);\n\n        emit PoolCreated(address(stakingToken), address(rewardToken), poolAddress);\n        return address(poolAddress);\n    }\n\n    /// @notice Returns the number of deployed pools\n    /// @return The total number of deployed pools\n    function getPoolCount() external view returns (uint256) {\n        return allPools.length;\n    }\n\n    /// @notice Returns the address of a pool at a given index\n    /// @param index The index of the pool in the array\n    /// @return The address of the pool\n    function getPool(uint256 index) external view returns (address) {\n        require(index < allPools.length, \"Invalid index\");\n        return allPools[index];\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "storageLayout"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              281
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 282,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 281,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 281,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                281
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 263,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              225
            ]
          },
          "id": 226,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:1",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 225,
              "linearizedBaseContracts": [
                225
              ],
              "name": "IERC20",
              "nameLocation": "214:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 159,
                  "name": "Transfer",
                  "nameLocation": "396:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "405:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "427:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "447:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:1"
                  },
                  "src": "390:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 168,
                  "name": "Approval",
                  "nameLocation": "627:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "636:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "659:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "684:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:1"
                  },
                  "src": "621:78:1"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:1",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:1"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "821:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:1"
                  },
                  "scope": 225,
                  "src": "775:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:1",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "931:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:1"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "971:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:1"
                  },
                  "scope": 225,
                  "src": "912:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1222:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1234:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1267:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:1"
                  },
                  "scope": 225,
                  "src": "1204:69:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1567:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1582:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:1"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1622:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:1"
                  },
                  "scope": 225,
                  "src": "1548:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 203,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 212,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2326:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2343:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2376:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:1"
                  },
                  "scope": 225,
                  "src": "2309:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 213,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2712:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2726:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2738:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:1"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2771:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:1"
                  },
                  "scope": 225,
                  "src": "2690:87:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 226,
              "src": "204:2575:1",
              "usedErrors": [],
              "usedEvents": [
                159,
                168
              ]
            }
          ],
          "src": "106:2674:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              225
            ],
            "IERC20Metadata": [
              251
            ]
          },
          "id": 252,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 227,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 229,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 252,
              "sourceUnit": 226,
              "src": "151:37:2",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 228,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 225,
                    "src": "159:6:2",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 231,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:2"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 225,
                    "src": "306:6:2"
                  },
                  "id": 232,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:2"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 230,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:2",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 251,
              "linearizedBaseContracts": [
                251,
                225
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 233,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:2",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 238,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:2"
                  },
                  "returnParameters": {
                    "id": 237,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "417:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:2"
                  },
                  "scope": 251,
                  "src": "378:54:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:2",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 244,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 240,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:2"
                  },
                  "returnParameters": {
                    "id": 243,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 242,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 244,
                        "src": "540:13:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:2"
                  },
                  "scope": 251,
                  "src": "499:56:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 245,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:2",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 250,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 246,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:2"
                  },
                  "returnParameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 250,
                        "src": "674:5:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:2"
                  },
                  "scope": 251,
                  "src": "631:50:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 252,
              "src": "278:405:2",
              "usedErrors": [],
              "usedEvents": [
                159,
                168
              ]
            }
          ],
          "src": "125:559:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              281
            ]
          },
          "id": 282,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 253,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:3"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 254,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:3",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 281,
              "linearizedBaseContracts": [
                281
              ],
              "name": "Context",
              "nameLocation": "642:7:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 262,
                    "nodeType": "Block",
                    "src": "718:34:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 259,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 258,
                        "id": 261,
                        "nodeType": "Return",
                        "src": "728:17:3"
                      }
                    ]
                  },
                  "id": 263,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 255,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:3"
                  },
                  "returnParameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 263,
                        "src": "709:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:3"
                  },
                  "scope": 281,
                  "src": "656:96:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 271,
                    "nodeType": "Block",
                    "src": "825:32:3",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 268,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:3",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 267,
                        "id": 270,
                        "nodeType": "Return",
                        "src": "835:15:3"
                      }
                    ]
                  },
                  "id": 272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 264,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:3"
                  },
                  "returnParameters": {
                    "id": 267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 272,
                        "src": "809:14:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:3"
                  },
                  "scope": 281,
                  "src": "758:99:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 279,
                    "nodeType": "Block",
                    "src": "935:25:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 276,
                        "id": 278,
                        "nodeType": "Return",
                        "src": "945:8:3"
                      }
                    ]
                  },
                  "id": 280,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:3"
                  },
                  "returnParameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "926:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:3"
                  },
                  "scope": 281,
                  "src": "863:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 282,
              "src": "624:338:3",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:3"
        },
        "id": 3
      },
      "contracts/SubnetStakingPool.sol": {
        "ast": {
          "absolutePath": "contracts/SubnetStakingPool.sol",
          "exportedSymbols": {
            "Context": [
              281
            ],
            "IERC20": [
              225
            ],
            "IERC20Metadata": [
              251
            ],
            "Ownable": [
              147
            ],
            "SubnetStakingPool": [
              884
            ]
          },
          "id": 885,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 283,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:4"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 284,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 885,
              "sourceUnit": 226,
              "src": "57:56:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 285,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 885,
              "sourceUnit": 148,
              "src": "114:52:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "id": 287,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 885,
              "sourceUnit": 252,
              "src": "167:97:4",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 286,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 251,
                    "src": "175:14:4",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 288,
                    "name": "Ownable",
                    "nameLocations": [
                      "296:7:4"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "296:7:4"
                  },
                  "id": 289,
                  "nodeType": "InheritanceSpecifier",
                  "src": "296:7:4"
                }
              ],
              "canonicalName": "SubnetStakingPool",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 884,
              "linearizedBaseContracts": [
                884,
                147,
                281
              ],
              "name": "SubnetStakingPool",
              "nameLocation": "275:17:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "72f702f3",
                  "id": 292,
                  "mutability": "immutable",
                  "name": "stakingToken",
                  "nameLocation": "342:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "310:44:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                    "typeString": "contract IERC20Metadata"
                  },
                  "typeName": {
                    "id": 291,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 290,
                      "name": "IERC20Metadata",
                      "nameLocations": [
                        "310:14:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 251,
                      "src": "310:14:4"
                    },
                    "referencedDeclaration": 251,
                    "src": "310:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f7c618c1",
                  "id": 295,
                  "mutability": "immutable",
                  "name": "rewardToken",
                  "nameLocation": "392:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "360:43:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                    "typeString": "contract IERC20Metadata"
                  },
                  "typeName": {
                    "id": 294,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 293,
                      "name": "IERC20Metadata",
                      "nameLocations": [
                        "360:14:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 251,
                      "src": "360:14:4"
                    },
                    "referencedDeclaration": 251,
                    "src": "360:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                      "typeString": "contract IERC20Metadata"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5d773b2c",
                  "id": 297,
                  "mutability": "mutable",
                  "name": "rewardRatePerSecond",
                  "nameLocation": "459:19:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "444:34:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "817b1cd2",
                  "id": 299,
                  "mutability": "mutable",
                  "name": "totalStaked",
                  "nameLocation": "535:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "520:26:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "9231cf74",
                  "id": 301,
                  "mutability": "mutable",
                  "name": "lastRewardTime",
                  "nameLocation": "602:14:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "587:29:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "587:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "df136d65",
                  "id": 303,
                  "mutability": "mutable",
                  "name": "rewardPerTokenStored",
                  "nameLocation": "676:20:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "661:35:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "661:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ccd34cd5",
                  "id": 305,
                  "mutability": "mutable",
                  "name": "PRECISION_FACTOR",
                  "nameLocation": "749:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "734:31:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 304,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "734:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "78e97925",
                  "id": 307,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "811:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "796:24:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3197cbb6",
                  "id": 309,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "875:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "860:22:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "860:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "acc3a939",
                  "id": 313,
                  "mutability": "mutable",
                  "name": "userStaked",
                  "nameLocation": "956:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "921:45:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 312,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 310,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "929:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "921:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 311,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "940:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8b876347",
                  "id": 317,
                  "mutability": "mutable",
                  "name": "userRewardPerTokenPaid",
                  "nameLocation": "1033:22:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "998:57:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 316,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 314,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1006:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "998:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 315,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1017:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0660f1e8",
                  "id": 321,
                  "mutability": "mutable",
                  "name": "userRewards",
                  "nameLocation": "1120:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 884,
                  "src": "1085:46:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 320,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 318,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1093:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1085:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 319,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1104:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
                  "id": 327,
                  "name": "Staked",
                  "nameLocation": "1180:6:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1203:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "1187:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1187:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 325,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1217:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 327,
                        "src": "1209:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 324,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1209:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1186:38:4"
                  },
                  "src": "1174:51:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
                  "id": 333,
                  "name": "Withdrawn",
                  "nameLocation": "1236:9:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1262:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1246:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1246:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1276:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 333,
                        "src": "1268:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1245:38:4"
                  },
                  "src": "1230:54:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
                  "id": 339,
                  "name": "RewardClaimed",
                  "nameLocation": "1295:13:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 338,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 335,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1325:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "1309:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 334,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1309:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 337,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reward",
                        "nameLocation": "1339:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 339,
                        "src": "1331:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 336,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1331:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1308:38:4"
                  },
                  "src": "1289:58:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "41d466ebd06fb97e7786086ac8b69b7eb7da798592036251291d34e9791cde01",
                  "id": 343,
                  "name": "RewardRateUpdated",
                  "nameLocation": "1358:17:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 342,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newRate",
                        "nameLocation": "1384:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 343,
                        "src": "1376:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1376:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1375:17:4"
                  },
                  "src": "1352:41:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "37d37b8940cc1ec723111799f54132501e05042cd219649e575e84e5c36f3b5e",
                  "id": 347,
                  "name": "EndTimeUpdated",
                  "nameLocation": "1404:14:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 345,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "newEndTime",
                        "nameLocation": "1427:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 347,
                        "src": "1419:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1419:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1418:20:4"
                  },
                  "src": "1398:41:4"
                },
                {
                  "body": {
                    "id": 439,
                    "nodeType": "Block",
                    "src": "1682:593:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 368,
                                "name": "_startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 359,
                                "src": "1700:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 369,
                                "name": "_endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 361,
                                "src": "1713:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1700:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53746172742074696d65206d757374206265206265666f726520656e642074696d65",
                              "id": 371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1723:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
                                "typeString": "literal_string \"Start time must be before end time\""
                              },
                              "value": "Start time must be before end time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_14970ef9626ee9575baa3099cb0ab29dc5dbecafe57de615669db673fc1fcb3f",
                                "typeString": "literal_string \"Start time must be before end time\""
                              }
                            ],
                            "id": 367,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1692:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1692:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 373,
                        "nodeType": "ExpressionStatement",
                        "src": "1692:68:4"
                      },
                      {
                        "expression": {
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 374,
                            "name": "stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 292,
                            "src": "1771:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                              "typeString": "contract IERC20Metadata"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 375,
                            "name": "_stakingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 352,
                            "src": "1786:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                              "typeString": "contract IERC20Metadata"
                            }
                          },
                          "src": "1771:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 377,
                        "nodeType": "ExpressionStatement",
                        "src": "1771:28:4"
                      },
                      {
                        "expression": {
                          "id": 380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 378,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "1809:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                              "typeString": "contract IERC20Metadata"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 379,
                            "name": "_rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1823:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                              "typeString": "contract IERC20Metadata"
                            }
                          },
                          "src": "1809:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "id": 381,
                        "nodeType": "ExpressionStatement",
                        "src": "1809:26:4"
                      },
                      {
                        "expression": {
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 382,
                            "name": "rewardRatePerSecond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "1845:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 383,
                            "name": "_rewardRatePerSecond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "1867:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1845:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "1845:42:4"
                      },
                      {
                        "expression": {
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 386,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 307,
                            "src": "1897:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 387,
                            "name": "_startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "1909:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1897:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 389,
                        "nodeType": "ExpressionStatement",
                        "src": "1897:22:4"
                      },
                      {
                        "expression": {
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 390,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 309,
                            "src": "1929:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 391,
                            "name": "_endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "1939:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1929:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 393,
                        "nodeType": "ExpressionStatement",
                        "src": "1929:18:4"
                      },
                      {
                        "expression": {
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 394,
                            "name": "lastRewardTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "1957:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 395,
                            "name": "_startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "1974:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1957:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 397,
                        "nodeType": "ExpressionStatement",
                        "src": "1957:27:4"
                      },
                      {
                        "assignments": [
                          399
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 399,
                            "mutability": "mutable",
                            "name": "decimalsRewardToken",
                            "nameLocation": "2003:19:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 439,
                            "src": "1995:27:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 398,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1995:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 416,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                              "typeString": "contract IERC20Metadata"
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 400,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 295,
                              "src": "2025:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 404,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "2063:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 403,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2055:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 402,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2055:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2055:10:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 401,
                                "name": "IERC20Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 251,
                                "src": "2040:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$251_$",
                                  "typeString": "type(contract IERC20Metadata)"
                                }
                              },
                              "id": 406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2040:26:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "src": "2025:41:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 411,
                                    "name": "rewardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "2098:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                      "typeString": "contract IERC20Metadata"
                                    }
                                  },
                                  "id": 412,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2110:8:4",
                                  "memberName": "decimals",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 250,
                                  "src": "2098:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                    "typeString": "function () view external returns (uint8)"
                                  }
                                },
                                "id": 413,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2098:22:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2090:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 409,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2090:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 414,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2090:31:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "2025:96:4",
                          "trueExpression": {
                            "hexValue": "3138",
                            "id": 408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2077:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1995:126:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 418,
                                "name": "decimalsRewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 399,
                                "src": "2139:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "3330",
                                "id": 419,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2161:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_30_by_1",
                                  "typeString": "int_const 30"
                                },
                                "value": "30"
                              },
                              "src": "2139:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d75737420626520696e666572696f7220746f203330",
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2165:24:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fdf049a4f34fca2b5f20dd0fb49af89413ed6cdc2c22f4b883c953b5dec74326",
                                "typeString": "literal_string \"Must be inferior to 30\""
                              },
                              "value": "Must be inferior to 30"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fdf049a4f34fca2b5f20dd0fb49af89413ed6cdc2c22f4b883c953b5dec74326",
                                "typeString": "literal_string \"Must be inferior to 30\""
                              }
                            ],
                            "id": 417,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2131:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2131:59:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 423,
                        "nodeType": "ExpressionStatement",
                        "src": "2131:59:4"
                      },
                      {
                        "expression": {
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 424,
                            "name": "PRECISION_FACTOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 305,
                            "src": "2201:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2228:2:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 433,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "hexValue": "3330",
                                            "id": 430,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2241:2:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_30_by_1",
                                              "typeString": "int_const 30"
                                            },
                                            "value": "30"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_rational_30_by_1",
                                              "typeString": "int_const 30"
                                            }
                                          ],
                                          "id": 429,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "2233:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 428,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "2233:7:4",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 431,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2233:11:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 432,
                                        "name": "decimalsRewardToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 399,
                                        "src": "2247:19:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2233:33:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 434,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "2232:35:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2228:39:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2220:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 425,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "2220:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2220:48:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2201:67:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "2201:67:4"
                      }
                    ]
                  },
                  "id": 440,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 364,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "1668:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 365,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 363,
                        "name": "Ownable",
                        "nameLocations": [
                          "1660:7:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "1660:7:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1660:21:4"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 349,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1474:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1466:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 348,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1466:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 352,
                        "mutability": "mutable",
                        "name": "_stakingToken",
                        "nameLocation": "1511:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1496:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                          "typeString": "contract IERC20Metadata"
                        },
                        "typeName": {
                          "id": 351,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 350,
                            "name": "IERC20Metadata",
                            "nameLocations": [
                              "1496:14:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "1496:14:4"
                          },
                          "referencedDeclaration": 251,
                          "src": "1496:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 355,
                        "mutability": "mutable",
                        "name": "_rewardToken",
                        "nameLocation": "1549:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1534:27:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                          "typeString": "contract IERC20Metadata"
                        },
                        "typeName": {
                          "id": 354,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 353,
                            "name": "IERC20Metadata",
                            "nameLocations": [
                              "1534:14:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 251,
                            "src": "1534:14:4"
                          },
                          "referencedDeclaration": 251,
                          "src": "1534:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                            "typeString": "contract IERC20Metadata"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 357,
                        "mutability": "mutable",
                        "name": "_rewardRatePerSecond",
                        "nameLocation": "1579:20:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1571:28:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 356,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1571:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 359,
                        "mutability": "mutable",
                        "name": "_startTime",
                        "nameLocation": "1617:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1609:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 358,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1609:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 361,
                        "mutability": "mutable",
                        "name": "_endTime",
                        "nameLocation": "1645:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "1637:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1637:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1456:203:4"
                  },
                  "returnParameters": {
                    "id": 366,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1682:0:4"
                  },
                  "scope": 884,
                  "src": "1445:830:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 478,
                    "nodeType": "Block",
                    "src": "2382:277:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 445,
                            "name": "rewardPerTokenStored",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "2392:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 446,
                              "name": "rewardPerToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 551,
                              "src": "2415:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2415:16:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2392:39:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "2392:39:4"
                      },
                      {
                        "expression": {
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 450,
                            "name": "lastRewardTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "2441:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 451,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2458:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2464:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2458:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2441:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 454,
                        "nodeType": "ExpressionStatement",
                        "src": "2441:32:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 455,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 443,
                            "src": "2488:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2507:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 457,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2499:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 456,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2499:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 459,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2499:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2488:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 476,
                        "nodeType": "IfStatement",
                        "src": "2484:158:4",
                        "trueBody": {
                          "id": 475,
                          "nodeType": "Block",
                          "src": "2511:131:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 467,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 461,
                                    "name": "userRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 321,
                                    "src": "2525:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 463,
                                  "indexExpression": {
                                    "id": 462,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 443,
                                    "src": "2537:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2525:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 465,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 443,
                                      "src": "2555:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 464,
                                    "name": "earned",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 580,
                                    "src": "2548:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) view returns (uint256)"
                                    }
                                  },
                                  "id": 466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2548:15:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2525:38:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 468,
                              "nodeType": "ExpressionStatement",
                              "src": "2525:38:4"
                            },
                            {
                              "expression": {
                                "id": 473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 469,
                                    "name": "userRewardPerTokenPaid",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 317,
                                    "src": "2577:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 471,
                                  "indexExpression": {
                                    "id": 470,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 443,
                                    "src": "2600:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2577:31:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 472,
                                  "name": "rewardPerTokenStored",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 303,
                                  "src": "2611:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2577:54:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 474,
                              "nodeType": "ExpressionStatement",
                              "src": "2577:54:4"
                            }
                          ]
                        }
                      },
                      {
                        "id": 477,
                        "nodeType": "PlaceholderStatement",
                        "src": "2651:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 441,
                    "nodeType": "StructuredDocumentation",
                    "src": "2281:57:4",
                    "text": "@notice Updates the reward calculations for all users"
                  },
                  "id": 479,
                  "name": "updateReward",
                  "nameLocation": "2352:12:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2373:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 479,
                        "src": "2365:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2365:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2364:17:4"
                  },
                  "src": "2343:316:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 499,
                    "nodeType": "Block",
                    "src": "2769:161:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 486,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 483,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2787:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2793:9:4",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2787:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 485,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "2806:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2787:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616b696e67206e6f74207374617274656420796574",
                              "id": 487,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2817:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_add093a9b4f852c0c7e7315a9c80296c0de61af3d5a5fe3a0d5da7e6b7c00fe1",
                                "typeString": "literal_string \"Staking not started yet\""
                              },
                              "value": "Staking not started yet"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_add093a9b4f852c0c7e7315a9c80296c0de61af3d5a5fe3a0d5da7e6b7c00fe1",
                                "typeString": "literal_string \"Staking not started yet\""
                              }
                            ],
                            "id": 482,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2779:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2779:64:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 489,
                        "nodeType": "ExpressionStatement",
                        "src": "2779:64:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 491,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "2861:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2867:9:4",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "2861:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 493,
                                "name": "endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 309,
                                "src": "2880:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2861:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616b696e6720706572696f6420656e646564",
                              "id": 495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2889:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8f60626321f2a1253a8973ddd868b826a5cb37df66e0df592ce371be39b6aee0",
                                "typeString": "literal_string \"Staking period ended\""
                              },
                              "value": "Staking period ended"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8f60626321f2a1253a8973ddd868b826a5cb37df66e0df592ce371be39b6aee0",
                                "typeString": "literal_string \"Staking period ended\""
                              }
                            ],
                            "id": 490,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2853:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2853:59:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 497,
                        "nodeType": "ExpressionStatement",
                        "src": "2853:59:4"
                      },
                      {
                        "id": 498,
                        "nodeType": "PlaceholderStatement",
                        "src": "2922:1:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 480,
                    "nodeType": "StructuredDocumentation",
                    "src": "2665:68:4",
                    "text": "@notice Ensures the function is called within the staking period"
                  },
                  "id": 500,
                  "name": "withinStakingPeriod",
                  "nameLocation": "2747:19:4",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 481,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2766:2:4"
                  },
                  "src": "2738:192:4",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 550,
                    "nodeType": "Block",
                    "src": "3092:473:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 506,
                              "name": "totalStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "3106:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3121:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3106:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 509,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3126:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3132:9:4",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3126:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 511,
                              "name": "startTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "3144:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3126:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3106:47:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 517,
                        "nodeType": "IfStatement",
                        "src": "3102:105:4",
                        "trueBody": {
                          "id": 516,
                          "nodeType": "Block",
                          "src": "3155:52:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 514,
                                "name": "rewardPerTokenStored",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "3176:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 505,
                              "id": 515,
                              "nodeType": "Return",
                              "src": "3169:27:4"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          519
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 519,
                            "mutability": "mutable",
                            "name": "applicableEndTime",
                            "nameLocation": "3225:17:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 550,
                            "src": "3217:25:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 518,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3217:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 528,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 523,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 520,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3245:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3251:9:4",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3245:15:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "id": 522,
                              "name": "endTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "3263:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3245:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "expression": {
                              "id": 525,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3283:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3289:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3283:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "3245:53:4",
                          "trueExpression": {
                            "id": 524,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 309,
                            "src": "3273:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3217:81:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 529,
                            "name": "applicableEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 519,
                            "src": "3312:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 530,
                            "name": "lastRewardTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "3333:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3312:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 535,
                        "nodeType": "IfStatement",
                        "src": "3308:93:4",
                        "trueBody": {
                          "id": 534,
                          "nodeType": "Block",
                          "src": "3349:52:4",
                          "statements": [
                            {
                              "expression": {
                                "id": 532,
                                "name": "rewardPerTokenStored",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 303,
                                "src": "3370:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 505,
                              "id": 533,
                              "nodeType": "Return",
                              "src": "3363:27:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 536,
                            "name": "rewardPerTokenStored",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "3430:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 544,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 542,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 539,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 537,
                                            "name": "applicableEndTime",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 519,
                                            "src": "3467:17:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 538,
                                            "name": "lastRewardTime",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 301,
                                            "src": "3487:14:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "3467:34:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 540,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "3466:36:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 541,
                                      "name": "rewardRatePerSecond",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 297,
                                      "src": "3505:19:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3466:58:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 543,
                                    "name": "PRECISION_FACTOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 305,
                                    "src": "3527:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3466:77:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 545,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3465:79:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 546,
                              "name": "totalStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 299,
                              "src": "3547:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3465:93:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3430:128:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 505,
                        "id": 549,
                        "nodeType": "Return",
                        "src": "3411:147:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 501,
                    "nodeType": "StructuredDocumentation",
                    "src": "2936:95:4",
                    "text": "@notice Calculates the reward per token\n @return The reward per token scaled by 1e18"
                  },
                  "functionSelector": "cd3daf9d",
                  "id": 551,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "rewardPerToken",
                  "nameLocation": "3045:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 502,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3059:2:4"
                  },
                  "returnParameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 551,
                        "src": "3083:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3083:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3082:9:4"
                  },
                  "scope": 884,
                  "src": "3036:529:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 579,
                    "nodeType": "Block",
                    "src": "3792:168:4",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 559,
                                          "name": "userStaked",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 313,
                                          "src": "3823:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 561,
                                        "indexExpression": {
                                          "id": 560,
                                          "name": "account",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 554,
                                          "src": "3834:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3823:19:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 567,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 562,
                                                "name": "rewardPerToken",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 551,
                                                "src": "3846:14:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                  "typeString": "function () view returns (uint256)"
                                                }
                                              },
                                              "id": 563,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "3846:16:4",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "baseExpression": {
                                                "id": 564,
                                                "name": "userRewardPerTokenPaid",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 317,
                                                "src": "3865:22:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 566,
                                              "indexExpression": {
                                                "id": 565,
                                                "name": "account",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 554,
                                                "src": "3888:7:4",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "3865:31:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "3846:50:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 568,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3845:52:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3823:74:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 570,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3822:76:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 571,
                                  "name": "PRECISION_FACTOR",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3901:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3822:95:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 573,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3821:97:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 574,
                              "name": "userRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "3933:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 576,
                            "indexExpression": {
                              "id": 575,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 554,
                              "src": "3945:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3933:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3821:132:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 558,
                        "id": 578,
                        "nodeType": "Return",
                        "src": "3802:151:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 552,
                    "nodeType": "StructuredDocumentation",
                    "src": "3572:152:4",
                    "text": "@notice Calculates the earned rewards for a user\n @param account The address of the user\n @return The total rewards earned by the user"
                  },
                  "functionSelector": "008cc262",
                  "id": 580,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "earned",
                  "nameLocation": "3738:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 555,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 554,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3753:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "3745:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 553,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3745:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3744:17:4"
                  },
                  "returnParameters": {
                    "id": 558,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 557,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "3783:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 556,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3783:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3782:9:4"
                  },
                  "scope": 884,
                  "src": "3729:231:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 628,
                    "nodeType": "Block",
                    "src": "4149:239:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 593,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 583,
                                "src": "4167:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 594,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4176:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4167:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74207374616b652030",
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4179:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                                "typeString": "literal_string \"Cannot stake 0\""
                              },
                              "value": "Cannot stake 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
                                "typeString": "literal_string \"Cannot stake 0\""
                              }
                            ],
                            "id": 592,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4159:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4159:37:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 598,
                        "nodeType": "ExpressionStatement",
                        "src": "4159:37:4"
                      },
                      {
                        "expression": {
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 599,
                            "name": "totalStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "4206:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 600,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "4221:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4206:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 602,
                        "nodeType": "ExpressionStatement",
                        "src": "4206:21:4"
                      },
                      {
                        "expression": {
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 603,
                              "name": "userStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "4237:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 606,
                            "indexExpression": {
                              "expression": {
                                "id": 604,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4248:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4252:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4248:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4237:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 607,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 583,
                            "src": "4263:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4237:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 609,
                        "nodeType": "ExpressionStatement",
                        "src": "4237:32:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 613,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4306:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 614,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4310:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4306:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 617,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "4326:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SubnetStakingPool_$884",
                                    "typeString": "contract SubnetStakingPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SubnetStakingPool_$884",
                                    "typeString": "contract SubnetStakingPool"
                                  }
                                ],
                                "id": 616,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4318:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 615,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4318:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4318:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 619,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "4333:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 610,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "4280:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4293:12:4",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 224,
                            "src": "4280:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4280:60:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "4280:60:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 623,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4362:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 624,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4366:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4362:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 625,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 583,
                              "src": "4374:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 622,
                            "name": "Staked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 327,
                            "src": "4355:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4355:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 627,
                        "nodeType": "EmitStatement",
                        "src": "4350:31:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 581,
                    "nodeType": "StructuredDocumentation",
                    "src": "3966:93:4",
                    "text": "@notice Allows a user to stake tokens\n @param amount The amount of tokens to stake"
                  },
                  "functionSelector": "a694fc3a",
                  "id": 629,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 586,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 585,
                        "name": "withinStakingPeriod",
                        "nameLocations": [
                          "4104:19:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 500,
                        "src": "4104:19:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4104:19:4"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 588,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4137:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4141:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4137:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 590,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 587,
                        "name": "updateReward",
                        "nameLocations": [
                          "4124:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 479,
                        "src": "4124:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4124:24:4"
                    }
                  ],
                  "name": "stake",
                  "nameLocation": "4073:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 584,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 583,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4087:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 629,
                        "src": "4079:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4079:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4078:16:4"
                  },
                  "returnParameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4149:0:4"
                  },
                  "scope": 884,
                  "src": "4064:324:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 681,
                    "nodeType": "Block",
                    "src": "4573:312:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 640,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "4591:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 641,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4600:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4591:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f742077697468647261772030",
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4603:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
                                "typeString": "literal_string \"Cannot withdraw 0\""
                              },
                              "value": "Cannot withdraw 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8d85b8e7f4404d04d93e8d532ad219ceeba0becfbc18622bad46b31e08b1f0b0",
                                "typeString": "literal_string \"Cannot withdraw 0\""
                              }
                            ],
                            "id": 639,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4583:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4583:40:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 645,
                        "nodeType": "ExpressionStatement",
                        "src": "4583:40:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 652,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 647,
                                  "name": "userStaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 313,
                                  "src": "4641:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 650,
                                "indexExpression": {
                                  "expression": {
                                    "id": 648,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "4652:3:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 649,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4656:6:4",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4652:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4641:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 651,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 632,
                                "src": "4667:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4641:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "576974686472617720616d6f756e742065786365656473207374616b6564",
                              "id": 653,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4675:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7b619967cc254bf58dbd80cea3fa27bd325a071cc3379903a6a34c5c0322d90c",
                                "typeString": "literal_string \"Withdraw amount exceeds staked\""
                              },
                              "value": "Withdraw amount exceeds staked"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7b619967cc254bf58dbd80cea3fa27bd325a071cc3379903a6a34c5c0322d90c",
                                "typeString": "literal_string \"Withdraw amount exceeds staked\""
                              }
                            ],
                            "id": 646,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4633:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4633:75:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "4633:75:4"
                      },
                      {
                        "expression": {
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 656,
                            "name": "totalStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 299,
                            "src": "4719:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 657,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "4734:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4719:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 659,
                        "nodeType": "ExpressionStatement",
                        "src": "4719:21:4"
                      },
                      {
                        "expression": {
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 660,
                              "name": "userStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 313,
                              "src": "4750:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 663,
                            "indexExpression": {
                              "expression": {
                                "id": 661,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4761:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4765:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4761:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4750:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 664,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "4776:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4750:32:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 666,
                        "nodeType": "ExpressionStatement",
                        "src": "4750:32:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 670,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4815:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 671,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4819:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4815:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 672,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "4827:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 667,
                              "name": "stakingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 292,
                              "src": "4793:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                "typeString": "contract IERC20Metadata"
                              }
                            },
                            "id": 669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4806:8:4",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 192,
                            "src": "4793:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4793:41:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 674,
                        "nodeType": "ExpressionStatement",
                        "src": "4793:41:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 676,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4859:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4863:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4859:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 678,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "4871:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 675,
                            "name": "Withdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 333,
                            "src": "4849:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4849:29:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 680,
                        "nodeType": "EmitStatement",
                        "src": "4844:34:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 630,
                    "nodeType": "StructuredDocumentation",
                    "src": "4394:106:4",
                    "text": "@notice Allows a user to withdraw staked tokens\n @param amount The amount of tokens to withdraw"
                  },
                  "functionSelector": "2e1a7d4d",
                  "id": 682,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 635,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4561:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4565:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4561:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 637,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 634,
                        "name": "updateReward",
                        "nameLocations": [
                          "4548:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 479,
                        "src": "4548:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4548:24:4"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "4514:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 632,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4531:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "4523:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 631,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4523:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4522:16:4"
                  },
                  "returnParameters": {
                    "id": 638,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4573:0:4"
                  },
                  "scope": 884,
                  "src": "4505:380:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 765,
                    "nodeType": "Block",
                    "src": "5001:607:4",
                    "statements": [
                      {
                        "assignments": [
                          691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 691,
                            "mutability": "mutable",
                            "name": "reward",
                            "nameLocation": "5019:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 765,
                            "src": "5011:14:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 690,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5011:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 696,
                        "initialValue": {
                          "baseExpression": {
                            "id": 692,
                            "name": "userRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 321,
                            "src": "5028:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 695,
                          "indexExpression": {
                            "expression": {
                              "id": 693,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5040:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5044:6:4",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5040:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5028:23:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5011:40:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 698,
                                "name": "reward",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 691,
                                "src": "5069:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 699,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5078:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5069:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f207265776172647320746f20636c61696d",
                              "id": 701,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5081:21:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
                                "typeString": "literal_string \"No rewards to claim\""
                              },
                              "value": "No rewards to claim"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_584cf1690fd4124c524340f65c2f0897ce34c8cad61c485ada0c89030473339d",
                                "typeString": "literal_string \"No rewards to claim\""
                              }
                            ],
                            "id": 697,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5061:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5061:42:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "5061:42:4"
                      },
                      {
                        "expression": {
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 704,
                              "name": "userRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 321,
                              "src": "5113:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 707,
                            "indexExpression": {
                              "expression": {
                                "id": 705,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5125:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5129:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5125:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5113:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 708,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5139:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5113:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 710,
                        "nodeType": "ExpressionStatement",
                        "src": "5113:27:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 713,
                                "name": "rewardToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "5171:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                  "typeString": "contract IERC20Metadata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                  "typeString": "contract IERC20Metadata"
                                }
                              ],
                              "id": 712,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5163:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 711,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5163:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 714,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5163:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5195:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 716,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5187:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 715,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5187:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5187:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5163:34:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 757,
                          "nodeType": "Block",
                          "src": "5336:217:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 741,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "5405:4:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SubnetStakingPool_$884",
                                                "typeString": "contract SubnetStakingPool"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_SubnetStakingPool_$884",
                                                "typeString": "contract SubnetStakingPool"
                                              }
                                            ],
                                            "id": 740,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "5397:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 739,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "5397:7:4",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 742,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "5397:13:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 737,
                                          "name": "rewardToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 295,
                                          "src": "5375:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                            "typeString": "contract IERC20Metadata"
                                          }
                                        },
                                        "id": 738,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "5387:9:4",
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 182,
                                        "src": "5375:21:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 743,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5375:36:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 744,
                                      "name": "reward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 691,
                                      "src": "5415:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5375:46:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "496e73756666696369656e742072657761726420746f6b656e2062616c616e6365",
                                    "id": 746,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5439:35:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_a9ed0dab22b79ccafc483a22d7db645e841c39cbac5fdef2ad9365a51aaec6e1",
                                      "typeString": "literal_string \"Insufficient reward token balance\""
                                    },
                                    "value": "Insufficient reward token balance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_a9ed0dab22b79ccafc483a22d7db645e841c39cbac5fdef2ad9365a51aaec6e1",
                                      "typeString": "literal_string \"Insufficient reward token balance\""
                                    }
                                  ],
                                  "id": 736,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5350:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5350:138:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 748,
                              "nodeType": "ExpressionStatement",
                              "src": "5350:138:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 752,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5523:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5527:6:4",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5523:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 754,
                                    "name": "reward",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 691,
                                    "src": "5535:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 749,
                                    "name": "rewardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "5502:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                      "typeString": "contract IERC20Metadata"
                                    }
                                  },
                                  "id": 751,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5514:8:4",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 192,
                                  "src": "5502:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 755,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5502:40:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 756,
                              "nodeType": "ExpressionStatement",
                              "src": "5502:40:4"
                            }
                          ]
                        },
                        "id": 758,
                        "nodeType": "IfStatement",
                        "src": "5159:394:4",
                        "trueBody": {
                          "id": 735,
                          "nodeType": "Block",
                          "src": "5199:131:4",
                          "statements": [
                            {
                              "assignments": [
                                721,
                                null
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 721,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nameLocation": "5219:7:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 735,
                                  "src": "5214:12:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 720,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5214:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null
                              ],
                              "id": 729,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "hexValue": "",
                                    "id": 727,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5263:2:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                        "typeString": "literal_string \"\""
                                      }
                                    ],
                                    "expression": {
                                      "expression": {
                                        "id": 722,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "5232:3:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "5236:6:4",
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "5232:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 724,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "5243:4:4",
                                    "memberName": "call",
                                    "nodeType": "MemberAccess",
                                    "src": "5232:15:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                      "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                    }
                                  },
                                  "id": 726,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "names": [
                                    "value"
                                  ],
                                  "nodeType": "FunctionCallOptions",
                                  "options": [
                                    {
                                      "id": 725,
                                      "name": "reward",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 691,
                                      "src": "5255:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "src": "5232:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 728,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5232:34:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5213:53:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 731,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 721,
                                    "src": "5288:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "455448207472616e73666572206661696c6564",
                                    "id": 732,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5297:21:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                      "typeString": "literal_string \"ETH transfer failed\""
                                    },
                                    "value": "ETH transfer failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c7c2be2f1b63a3793f6e2d447ce95ba2239687186a7fd6b5268a969dcdb42dcd",
                                      "typeString": "literal_string \"ETH transfer failed\""
                                    }
                                  ],
                                  "id": 730,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "5280:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5280:39:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 734,
                              "nodeType": "ExpressionStatement",
                              "src": "5280:39:4"
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 760,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5582:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5586:6:4",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5582:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 762,
                              "name": "reward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 691,
                              "src": "5594:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 759,
                            "name": "RewardClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 339,
                            "src": "5568:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5568:33:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 764,
                        "nodeType": "EmitStatement",
                        "src": "5563:38:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 683,
                    "nodeType": "StructuredDocumentation",
                    "src": "4891:48:4",
                    "text": "@notice Allows a user to claim their rewards"
                  },
                  "functionSelector": "b88a802f",
                  "id": 766,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 686,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4989:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4993:6:4",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4989:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 688,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 685,
                        "name": "updateReward",
                        "nameLocations": [
                          "4976:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 479,
                        "src": "4976:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4976:24:4"
                    }
                  ],
                  "name": "claimReward",
                  "nameLocation": "4953:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4964:2:4"
                  },
                  "returnParameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5001:0:4"
                  },
                  "scope": 884,
                  "src": "4944:664:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 797,
                    "nodeType": "Block",
                    "src": "5803:237:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 775,
                                "name": "newEndTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 769,
                                "src": "5821:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "expression": {
                                  "id": 776,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "5834:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 777,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5840:9:4",
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "5834:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5821:28:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456e642074696d65206d75737420626520696e2074686520667574757265",
                              "id": 779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5851:32:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7c140318fb56a0d1e8a88e9c3b789462190a55c3381e6f246e105eab0dd926f6",
                                "typeString": "literal_string \"End time must be in the future\""
                              },
                              "value": "End time must be in the future"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7c140318fb56a0d1e8a88e9c3b789462190a55c3381e6f246e105eab0dd926f6",
                                "typeString": "literal_string \"End time must be in the future\""
                              }
                            ],
                            "id": 774,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5813:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5813:71:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 781,
                        "nodeType": "ExpressionStatement",
                        "src": "5813:71:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 783,
                                "name": "newEndTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 769,
                                "src": "5902:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 784,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 307,
                                "src": "5915:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5902:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456e642074696d65206d7573742062652061667465722073746172742074696d65",
                              "id": 786,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5926:35:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
                                "typeString": "literal_string \"End time must be after start time\""
                              },
                              "value": "End time must be after start time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
                                "typeString": "literal_string \"End time must be after start time\""
                              }
                            ],
                            "id": 782,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5894:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5894:68:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 788,
                        "nodeType": "ExpressionStatement",
                        "src": "5894:68:4"
                      },
                      {
                        "expression": {
                          "id": 791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 789,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 309,
                            "src": "5972:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 790,
                            "name": "newEndTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 769,
                            "src": "5982:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5972:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 792,
                        "nodeType": "ExpressionStatement",
                        "src": "5972:20:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 794,
                              "name": "newEndTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 769,
                              "src": "6022:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 793,
                            "name": "EndTimeUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "6007:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6007:26:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 796,
                        "nodeType": "EmitStatement",
                        "src": "6002:31:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 767,
                    "nodeType": "StructuredDocumentation",
                    "src": "5618:118:4",
                    "text": "@notice Allows the owner to update the end time\n @param newEndTime The new end time for staking and rewards"
                  },
                  "functionSelector": "6ab3846b",
                  "id": 798,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 772,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 771,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5793:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5793:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5793:9:4"
                    }
                  ],
                  "name": "updateEndTime",
                  "nameLocation": "5750:13:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 769,
                        "mutability": "mutable",
                        "name": "newEndTime",
                        "nameLocation": "5772:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "5764:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5764:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5763:20:4"
                  },
                  "returnParameters": {
                    "id": 773,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5803:0:4"
                  },
                  "scope": 884,
                  "src": "5741:299:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 827,
                    "nodeType": "Block",
                    "src": "6257:173:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 813,
                                "name": "newRewardRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 801,
                                "src": "6275:13:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6291:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6275:17:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265776172642072617465206d7573742062652067726561746572207468616e2030",
                              "id": 816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6294:36:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
                                "typeString": "literal_string \"Reward rate must be greater than 0\""
                              },
                              "value": "Reward rate must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8942b765f795fe7fab7aa0cb7f225c8e9810b6fa713120bc966b53ea48caa695",
                                "typeString": "literal_string \"Reward rate must be greater than 0\""
                              }
                            ],
                            "id": 812,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6267:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6267:64:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 818,
                        "nodeType": "ExpressionStatement",
                        "src": "6267:64:4"
                      },
                      {
                        "expression": {
                          "id": 821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 819,
                            "name": "rewardRatePerSecond",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 297,
                            "src": "6341:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 820,
                            "name": "newRewardRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 801,
                            "src": "6363:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6341:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 822,
                        "nodeType": "ExpressionStatement",
                        "src": "6341:35:4"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 824,
                              "name": "newRewardRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 801,
                              "src": "6409:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 823,
                            "name": "RewardRateUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 343,
                            "src": "6391:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 825,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6391:32:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 826,
                        "nodeType": "EmitStatement",
                        "src": "6386:37:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 799,
                    "nodeType": "StructuredDocumentation",
                    "src": "6046:114:4",
                    "text": "@notice Allows the owner to update the reward rate\n @param newRewardRate The new reward rate per second"
                  },
                  "functionSelector": "9ef3a261",
                  "id": 828,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 804,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 803,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6223:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6223:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6223:9:4"
                    },
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6254:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 807,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6246:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 806,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6246:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6246:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 810,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 805,
                        "name": "updateReward",
                        "nameLocations": [
                          "6233:12:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 479,
                        "src": "6233:12:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6233:24:4"
                    }
                  ],
                  "name": "updateRewardRate",
                  "nameLocation": "6174:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 802,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 801,
                        "mutability": "mutable",
                        "name": "newRewardRate",
                        "nameLocation": "6199:13:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 828,
                        "src": "6191:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6191:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6190:23:4"
                  },
                  "returnParameters": {
                    "id": 811,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6257:0:4"
                  },
                  "scope": 884,
                  "src": "6165:265:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 878,
                    "nodeType": "Block",
                    "src": "6812:278:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 846,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 841,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 831,
                                "src": "6830:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 844,
                                    "name": "stakingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 292,
                                    "src": "6847:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                      "typeString": "contract IERC20Metadata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                      "typeString": "contract IERC20Metadata"
                                    }
                                  ],
                                  "id": 843,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6839:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 842,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6839:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6839:21:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6830:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74207769746864726177207374616b696e6720746f6b656e",
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6862:31:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b9d9f8bfc8081622ab160fe1613e3043a68958c71e9451f507872d2a1d2f67a5",
                                "typeString": "literal_string \"Cannot withdraw staking token\""
                              },
                              "value": "Cannot withdraw staking token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b9d9f8bfc8081622ab160fe1613e3043a68958c71e9451f507872d2a1d2f67a5",
                                "typeString": "literal_string \"Cannot withdraw staking token\""
                              }
                            ],
                            "id": 840,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6822:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6822:72:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 849,
                        "nodeType": "ExpressionStatement",
                        "src": "6822:72:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 856,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 851,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 831,
                                "src": "6912:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 854,
                                    "name": "rewardToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "6929:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                      "typeString": "contract IERC20Metadata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20Metadata_$251",
                                      "typeString": "contract IERC20Metadata"
                                    }
                                  ],
                                  "id": 853,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6921:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 852,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6921:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 855,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6921:20:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6912:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f742077697468647261772072657761726420746f6b656e",
                              "id": 857,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6943:30:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eb5f5276775e13a63c4aee40a9078f9944af0bdef5ddfb94324b6e130781a014",
                                "typeString": "literal_string \"Cannot withdraw reward token\""
                              },
                              "value": "Cannot withdraw reward token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eb5f5276775e13a63c4aee40a9078f9944af0bdef5ddfb94324b6e130781a014",
                                "typeString": "literal_string \"Cannot withdraw reward token\""
                              }
                            ],
                            "id": 850,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6904:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6904:70:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 859,
                        "nodeType": "ExpressionStatement",
                        "src": "6904:70:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 861,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 835,
                                "src": "6992:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 864,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7006:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6998:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 862,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6998:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 865,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6998:10:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6992:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420726563697069656e742061646472657373",
                              "id": 867,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7010:27:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
                                "typeString": "literal_string \"Invalid recipient address\""
                              },
                              "value": "Invalid recipient address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df",
                                "typeString": "literal_string \"Invalid recipient address\""
                              }
                            ],
                            "id": 860,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6984:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6984:54:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 869,
                        "nodeType": "ExpressionStatement",
                        "src": "6984:54:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 874,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 835,
                              "src": "7072:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 875,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 833,
                              "src": "7076:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 871,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 831,
                                  "src": "7056:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 870,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 225,
                                "src": "7049:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7049:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7063:8:4",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 192,
                            "src": "7049:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7049:34:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 877,
                        "nodeType": "ExpressionStatement",
                        "src": "7049:34:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 829,
                    "nodeType": "StructuredDocumentation",
                    "src": "6436:257:4",
                    "text": "@notice Allows the owner to withdraw tokens sent to the contract by mistake\n @param token The address of the token to withdraw\n @param amount The amount of the token to withdraw\n @param to The address to send the withdrawn tokens to"
                  },
                  "functionSelector": "b51609b4",
                  "id": 879,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 838,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 837,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "6802:9:4"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "6802:9:4"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6802:9:4"
                    }
                  ],
                  "name": "recoverERC20",
                  "nameLocation": "6707:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 836,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 831,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "6737:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 879,
                        "src": "6729:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 830,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6729:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 833,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6760:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 879,
                        "src": "6752:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 832,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6752:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 835,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6784:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 879,
                        "src": "6776:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 834,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6776:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6719:73:4"
                  },
                  "returnParameters": {
                    "id": 839,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6812:0:4"
                  },
                  "scope": 884,
                  "src": "6698:392:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 882,
                    "nodeType": "Block",
                    "src": "7123:2:4",
                    "statements": []
                  },
                  "id": 883,
                  "implemented": true,
                  "kind": "receive",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 880,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7103:2:4"
                  },
                  "returnParameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7123:0:4"
                  },
                  "scope": 884,
                  "src": "7096:29:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 885,
              "src": "266:6861:4",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24,
                327,
                333,
                339,
                343,
                347
              ]
            }
          ],
          "src": "32:7096:4"
        },
        "id": 4
      },
      "contracts/SubnetStakingPoolFactory.sol": {
        "ast": {
          "absolutePath": "contracts/SubnetStakingPoolFactory.sol",
          "exportedSymbols": {
            "Context": [
              281
            ],
            "IERC20": [
              225
            ],
            "IERC20Metadata": [
              251
            ],
            "Ownable": [
              147
            ],
            "SubnetStakingPool": [
              884
            ],
            "SubnetStakingPoolFactory": [
              1049
            ]
          },
          "id": 1050,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 886,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:23:5"
            },
            {
              "absolutePath": "contracts/SubnetStakingPool.sol",
              "file": "./SubnetStakingPool.sol",
              "id": 887,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1050,
              "sourceUnit": 885,
              "src": "57:33:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 888,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1050,
              "sourceUnit": 148,
              "src": "91:52:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 889,
                    "name": "Ownable",
                    "nameLocations": [
                      "182:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "182:7:5"
                  },
                  "id": 890,
                  "nodeType": "InheritanceSpecifier",
                  "src": "182:7:5"
                }
              ],
              "canonicalName": "SubnetStakingPoolFactory",
              "contractDependencies": [
                884
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1049,
              "linearizedBaseContracts": [
                1049,
                147,
                281
              ],
              "name": "SubnetStakingPoolFactory",
              "nameLocation": "154:24:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "eventSelector": "9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b",
                  "id": 898,
                  "name": "PoolCreated",
                  "nameLocation": "202:11:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 897,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 892,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "stakingToken",
                        "nameLocation": "230:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 898,
                        "src": "214:28:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 891,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "214:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 894,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nameLocation": "260:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 898,
                        "src": "244:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 893,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "244:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 896,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "poolAddress",
                        "nameLocation": "281:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 898,
                        "src": "273:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 895,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "273:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "213:80:5"
                  },
                  "src": "196:98:5"
                },
                {
                  "constant": false,
                  "functionSelector": "41d1de97",
                  "id": 901,
                  "mutability": "mutable",
                  "name": "allPools",
                  "nameLocation": "358:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1049,
                  "src": "341:25:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 899,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "341:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 900,
                    "nodeType": "ArrayTypeName",
                    "src": "341:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 909,
                    "nodeType": "Block",
                    "src": "443:3:5",
                    "statements": []
                  },
                  "id": 910,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 906,
                          "name": "initialOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 903,
                          "src": "429:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 907,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 905,
                        "name": "Ownable",
                        "nameLocations": [
                          "421:7:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "421:7:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "421:21:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 904,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 903,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "402:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 910,
                        "src": "394:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 902,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "394:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "384:36:5"
                  },
                  "returnParameters": {
                    "id": 908,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "443:0:5"
                  },
                  "scope": 1049,
                  "src": "373:73:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1016,
                    "nodeType": "Block",
                    "src": "1026:902:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 939,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 933,
                                    "name": "stakingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 914,
                                    "src": "1052:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$225",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$225",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1044:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 931,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1044:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 934,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1044:21:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 937,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1077:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 936,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1069:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 935,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1069:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 938,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1069:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1044:35:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207374616b696e6720746f6b656e2061646472657373",
                              "id": 940,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1081:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_74a546b36650b10b5913f324943af5963d1c5cac61434f91940880ec256ce96a",
                                "typeString": "literal_string \"Invalid staking token address\""
                              },
                              "value": "Invalid staking token address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_74a546b36650b10b5913f324943af5963d1c5cac61434f91940880ec256ce96a",
                                "typeString": "literal_string \"Invalid staking token address\""
                              }
                            ],
                            "id": 930,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1036:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 941,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1036:77:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 942,
                        "nodeType": "ExpressionStatement",
                        "src": "1036:77:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 944,
                                "name": "endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 923,
                                "src": "1131:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 945,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 921,
                                "src": "1141:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1131:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456e642074696d65206d7573742062652061667465722073746172742074696d65",
                              "id": 947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1152:35:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
                                "typeString": "literal_string \"End time must be after start time\""
                              },
                              "value": "End time must be after start time"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
                                "typeString": "literal_string \"End time must be after start time\""
                              }
                            ],
                            "id": 943,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1123:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1123:65:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 949,
                        "nodeType": "ExpressionStatement",
                        "src": "1123:65:5"
                      },
                      {
                        "assignments": [
                          951
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 951,
                            "mutability": "mutable",
                            "name": "salt",
                            "nameLocation": "1207:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1016,
                            "src": "1199:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 950,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1199:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 968,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 957,
                                      "name": "stakingToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 914,
                                      "src": "1249:12:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$225",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$225",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 956,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1241:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 955,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1241:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 958,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1241:21:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 961,
                                      "name": "rewardToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 917,
                                      "src": "1272:11:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$225",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$225",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 960,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1264:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 959,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1264:7:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 962,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1264:20:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 963,
                                  "name": "rewardRatePerSecond",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 919,
                                  "src": "1286:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 964,
                                  "name": "startTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 921,
                                  "src": "1307:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 965,
                                  "name": "endTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 923,
                                  "src": "1318:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 953,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1224:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 954,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1228:12:5",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1224:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 966,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1224:102:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 952,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1214:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1214:113:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1199:128:5"
                      },
                      {
                        "assignments": [
                          970
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 970,
                            "mutability": "mutable",
                            "name": "bytecode",
                            "nameLocation": "1350:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1016,
                            "src": "1337:21:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 969,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1337:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 988,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 974,
                                    "name": "SubnetStakingPool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 884,
                                    "src": "1396:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SubnetStakingPool_$884_$",
                                      "typeString": "type(contract SubnetStakingPool)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_SubnetStakingPool_$884_$",
                                      "typeString": "type(contract SubnetStakingPool)"
                                    }
                                  ],
                                  "id": 973,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "1391:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 975,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1391:23:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_SubnetStakingPool_$884",
                                  "typeString": "type(contract SubnetStakingPool)"
                                }
                              },
                              "id": 976,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "1415:12:5",
                              "memberName": "creationCode",
                              "nodeType": "MemberAccess",
                              "src": "1391:36:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 979,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "1452:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 980,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1456:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "1452:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 981,
                                  "name": "stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 914,
                                  "src": "1464:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 982,
                                  "name": "rewardToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 917,
                                  "src": "1478:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                {
                                  "id": 983,
                                  "name": "rewardRatePerSecond",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 919,
                                  "src": "1491:19:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 984,
                                  "name": "startTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 921,
                                  "src": "1512:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 985,
                                  "name": "endTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 923,
                                  "src": "1523:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 977,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1441:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 978,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1445:6:5",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "1441:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1441:90:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 971,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "1361:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1365:12:5",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "1361:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1361:180:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1337:204:5"
                      },
                      {
                        "assignments": [
                          990
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 990,
                            "mutability": "mutable",
                            "name": "poolAddress",
                            "nameLocation": "1560:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1016,
                            "src": "1552:19:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 989,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1552:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 991,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1552:19:5"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1590:173:5",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1604:69:5",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1627:1:5",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nodeType": "YulIdentifier",
                                        "src": "1634:8:5"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1644:4:5",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1630:3:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1630:19:5"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "bytecode",
                                        "nodeType": "YulIdentifier",
                                        "src": "1657:8:5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "1651:5:5"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1651:15:5"
                                  },
                                  {
                                    "name": "salt",
                                    "nodeType": "YulIdentifier",
                                    "src": "1668:4:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "create2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1619:7:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1619:54:5"
                              },
                              "variableNames": [
                                {
                                  "name": "poolAddress",
                                  "nodeType": "YulIdentifier",
                                  "src": "1604:11:5"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1709:44:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1734:1:5",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1737:1:5",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1727:6:5"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1727:12:5"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1727:12:5"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "poolAddress",
                                    "nodeType": "YulIdentifier",
                                    "src": "1696:11:5"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1689:6:5"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1689:19:5"
                              },
                              "nodeType": "YulIf",
                              "src": "1686:67:5"
                            }
                          ]
                        },
                        "evmVersion": "paris",
                        "externalReferences": [
                          {
                            "declaration": 970,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1634:8:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 970,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1657:8:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 990,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1604:11:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 990,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1696:11:5",
                            "valueSize": 1
                          },
                          {
                            "declaration": 951,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1668:4:5",
                            "valueSize": 1
                          }
                        ],
                        "id": 992,
                        "nodeType": "InlineAssembly",
                        "src": "1581:182:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 996,
                              "name": "poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "1787:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 993,
                              "name": "allPools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 901,
                              "src": "1773:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1782:4:5",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1773:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1773:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 998,
                        "nodeType": "ExpressionStatement",
                        "src": "1773:26:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1002,
                                  "name": "stakingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 914,
                                  "src": "1835:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1827:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1000,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1827:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1827:21:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1006,
                                  "name": "rewardToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 917,
                                  "src": "1858:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1850:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1004,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1850:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1850:20:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1008,
                              "name": "poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "1872:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 999,
                            "name": "PoolCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 898,
                            "src": "1815:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address,address)"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1815:69:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1010,
                        "nodeType": "EmitStatement",
                        "src": "1810:74:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1013,
                              "name": "poolAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "1909:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1012,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1901:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1011,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1901:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1901:20:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 929,
                        "id": 1015,
                        "nodeType": "Return",
                        "src": "1894:27:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 911,
                    "nodeType": "StructuredDocumentation",
                    "src": "452:360:5",
                    "text": "@notice Deploys a new staking pool\n @param stakingToken The address of the ERC20 token to be staked\n @param rewardRatePerSecond Reward rate per second for the pool\n @param startTime The start time of the staking pool\n @param endTime The end time of the staking pool\n @return The address of the newly deployed staking pool"
                  },
                  "functionSelector": "85ac165a",
                  "id": 1017,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 926,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 925,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "998:9:5"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "998:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "998:9:5"
                    }
                  ],
                  "name": "createPool",
                  "nameLocation": "826:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 924,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 914,
                        "mutability": "mutable",
                        "name": "stakingToken",
                        "nameLocation": "853:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "846:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$225",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 913,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 912,
                            "name": "IERC20",
                            "nameLocations": [
                              "846:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 225,
                            "src": "846:6:5"
                          },
                          "referencedDeclaration": 225,
                          "src": "846:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$225",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 917,
                        "mutability": "mutable",
                        "name": "rewardToken",
                        "nameLocation": "882:11:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "875:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$225",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 916,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 915,
                            "name": "IERC20",
                            "nameLocations": [
                              "875:6:5"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 225,
                            "src": "875:6:5"
                          },
                          "referencedDeclaration": 225,
                          "src": "875:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$225",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 919,
                        "mutability": "mutable",
                        "name": "rewardRatePerSecond",
                        "nameLocation": "911:19:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "903:27:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "903:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 921,
                        "mutability": "mutable",
                        "name": "startTime",
                        "nameLocation": "948:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "940:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 920,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "940:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 923,
                        "mutability": "mutable",
                        "name": "endTime",
                        "nameLocation": "975:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "967:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 922,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "967:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "836:152:5"
                  },
                  "returnParameters": {
                    "id": 929,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1017,
                        "src": "1017:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1017:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1016:9:5"
                  },
                  "scope": 1049,
                  "src": "817:1111:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1026,
                    "nodeType": "Block",
                    "src": "2094:39:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1023,
                            "name": "allPools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "2111:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2120:6:5",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2111:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1022,
                        "id": 1025,
                        "nodeType": "Return",
                        "src": "2104:22:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1018,
                    "nodeType": "StructuredDocumentation",
                    "src": "1934:99:5",
                    "text": "@notice Returns the number of deployed pools\n @return The total number of deployed pools"
                  },
                  "functionSelector": "8eec5d70",
                  "id": 1027,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPoolCount",
                  "nameLocation": "2047:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1019,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2059:2:5"
                  },
                  "returnParameters": {
                    "id": 1022,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1021,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1027,
                        "src": "2085:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1020,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2085:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2084:9:5"
                  },
                  "scope": 1049,
                  "src": "2038:95:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1047,
                    "nodeType": "Block",
                    "src": "2362:98:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1036,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1030,
                                "src": "2380:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 1037,
                                  "name": "allPools",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 901,
                                  "src": "2388:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 1038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2397:6:5",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2388:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2380:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c696420696e646578",
                              "id": 1040,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2405:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
                                "typeString": "literal_string \"Invalid index\""
                              },
                              "value": "Invalid index"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
                                "typeString": "literal_string \"Invalid index\""
                              }
                            ],
                            "id": 1035,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2372:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2372:49:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1042,
                        "nodeType": "ExpressionStatement",
                        "src": "2372:49:5"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1043,
                            "name": "allPools",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 901,
                            "src": "2438:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1045,
                          "indexExpression": {
                            "id": 1044,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1030,
                            "src": "2447:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2438:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1034,
                        "id": 1046,
                        "nodeType": "Return",
                        "src": "2431:22:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1028,
                    "nodeType": "StructuredDocumentation",
                    "src": "2139:154:5",
                    "text": "@notice Returns the address of a pool at a given index\n @param index The index of the pool in the array\n @return The address of the pool"
                  },
                  "functionSelector": "068bcd8d",
                  "id": 1048,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPool",
                  "nameLocation": "2307:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1030,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "2323:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1048,
                        "src": "2315:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1029,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2315:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2314:15:5"
                  },
                  "returnParameters": {
                    "id": 1034,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1033,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1048,
                        "src": "2353:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1032,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2353:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2352:9:5"
                  },
                  "scope": 1049,
                  "src": "2298:162:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1050,
              "src": "145:2317:5",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24,
                898
              ]
            }
          ],
          "src": "32:2431:5"
        },
        "id": 5
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 8,
                "contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          }
        }
      },
      "contracts/SubnetStakingPool.sol": {
        "SubnetStakingPool": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "_stakingToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "_rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_rewardRatePerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_endTime",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newEndTime",
                  "type": "uint256"
                }
              ],
              "name": "EndTimeUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "reward",
                  "type": "uint256"
                }
              ],
              "name": "RewardClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "newRate",
                  "type": "uint256"
                }
              ],
              "name": "RewardRateUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Staked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "Withdrawn",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "PRECISION_FACTOR",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "earned",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "endTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "lastRewardTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "recoverERC20",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardPerToken",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardPerTokenStored",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardRatePerSecond",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "rewardToken",
              "outputs": [
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "stake",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "stakingToken",
              "outputs": [
                {
                  "internalType": "contract IERC20Metadata",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalStaked",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newEndTime",
                  "type": "uint256"
                }
              ],
              "name": "updateEndTime",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newRewardRate",
                  "type": "uint256"
                }
              ],
              "name": "updateRewardRate",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "userRewardPerTokenPaid",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "userRewards",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "userStaked",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "stateMutability": "payable",
              "type": "receive"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_contract_IERC20Metadata_fromMemory": {
                  "entryPoint": 719,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 661,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60c060409080825234620002905760c08162001364803803809162000025828562000295565b833981010312620002905780516001600160a01b038082169291839003620002905760209162000057838201620002cf565b9062000065868201620002cf565b91606082015160a060808401519301519187156200027857600080546001600160a01b031981168a1782558a5191999088167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08b80a3838510156200022b57506080528360a0526001558160065560075560035516818115600014620001ad5750506012905b601e8210156200016a5750601e0390601e82116200015657604d8211620001565750600a0a6005555161107f9081620002e58239608051818181610587015281816107df01528181610ab60152610d12015260a051818181610138015281816102a201526105af0152f35b634e487b7160e01b81526011600452602490fd5b60649084519062461bcd60e51b82526004820152601660248201527f4d75737420626520696e666572696f7220746f203330000000000000000000006044820152fd5b845163313ce56760e01b815291829060049082905afa801562000221578390620001de575b60ff91501690620000eb565b508181813d831162000219575b620001f7818362000295565b8101031262000215575160ff81168103620002155760ff90620001d2565b8280fd5b503d620001eb565b84513d85823e3d90fd5b62461bcd60e51b815260048101889052602260248201527f53746172742074696d65206d757374206265206265666f726520656e642074696044820152616d6560f01b6064820152608490fd5b8851631e4fbdf760e01b815260006004820152602490fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620002b957604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620002905756fe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c9081628cc26214610e465781630660f1e814610e0e5781632e1a7d4d14610c715781633197cbb614610c525781635d773b2c14610c335781636ab3846b14610b42578163715018a614610ae557816372f702f314610aa157816378e9792514610a82578163817b1cd214610a635781638b87634714610a2b5781638da5cb5b14610a035781639231cf74146109e45781639ef3a26114610932578163a694fc3a1461074c578163acc3a93914610714578163b51609b414610545578163b88a802f14610257578163ccd34cd514610238578163cd3daf9d14610214578163df136d65146101f6578163f2fde38b1461016b575063f7c618c1036100115734610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b9050346101f25760203660031901126101f257610186610e6c565b9061018f610e87565b6001600160a01b039182169283156101dc57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9050346101f257826003193601126101f25760209250549051908152f35b505034610167578160031936011261016757602090610231610f16565b9051908152f35b5050346101675781600319360112610167576020906005549051908152f35b919050346101f257826003193601126101f257610272610f16565b82554260035533610520575b338352602090600a8252808420549283156104e957338552600a83528185208590557f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168061039057508480808087335af13d1561038b573d67ffffffffffffffff811161037857835190610304601f8201601f1916870183610ff9565b815286853d92013e5b156103415750907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241915b519283523392a280f35b82606492519162461bcd60e51b83528201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b634e487b7160e01b875260418352602487fd5b61030d565b9082516370a0823160e01b815230828201528481602481865afa9081156104df5790869188916104aa575b501061045d57825163a9059cbb60e01b8152339181019182526020820186905294939291839186919082908990829060400103925af1938415610453577f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419394610426575b50610337565b61044590833d851161044c575b61043d8183610ff9565b810190611031565b5038610420565b503d610433565b81513d87823e3d90fd5b825162461bcd60e51b8152908101849052602160248201527f496e73756666696369656e742072657761726420746f6b656e2062616c616e636044820152606560f81b6064820152608490fd5b809250868092503d83116104d8575b6104c38183610ff9565b810103126104d457859051386103bb565b8680fd5b503d6104b9565b84513d89823e3d90fd5b82606492519162461bcd60e51b835282015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152fd5b61052933610f9b565b338452600a60205281842055815460096020528184205561027e565b9050346101f25760603660031901126101f257610560610e6c565b6001600160a01b039060443590828216908183036104d4578390610582610e87565b1692807f00000000000000000000000000000000000000000000000000000000000000001684146106d1577f000000000000000000000000000000000000000000000000000000000000000016831461068e571561064b57835163a9059cbb60e01b81526001600160a01b039091169281019283526024356020848101919091529093929091849182908790829060400103925af19081156106425750610627575080f35b61063e9060203d811161044c5761043d8183610ff9565b5080f35b513d84823e3d90fd5b835162461bcd60e51b8152602081850152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b845162461bcd60e51b8152602081860152601c60248201527f43616e6e6f742077697468647261772072657761726420746f6b656e000000006044820152606490fd5b855162461bcd60e51b8152602081870152601d60248201527f43616e6e6f74207769746864726177207374616b696e6720746f6b656e0000006044820152606490fd5b5050346101675760203660031901126101675760209181906001600160a01b0361073c610e6c565b1681526008845220549051908152f35b919050346101f25760208060031936011261092e5782359160065442106108ed5760075442116108b55761077e610f16565b84554260035533610892575b82156108605761079c83600254610f09565b600255338552600882528085206107b4848254610f09565b905580516323b872dd60e01b81523394810194909452306024850152604484018390528184606481887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610453577f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9394610843575b50519283523392a280f35b61085990833d851161044c5761043d8183610ff9565b5038610838565b5162461bcd60e51b81529283015250600e60248201526d043616e6e6f74207374616b6520360941b6044820152606490fd5b61089b33610f9b565b338652600a8352818620558354600983528186205561078a565b5162461bcd60e51b81529283015250601460248201527314dd185ada5b99c81c195c9a5bd908195b99195960621b6044820152606490fd5b5162461bcd60e51b81529283015250601760248201527f5374616b696e67206e6f742073746172746564207965740000000000000000006044820152606490fd5b8380fd5b919050346101f25760203660031901126101f257813591610951610e87565b610959610f16565b81554260035582156109975750816020917f41d466ebd06fb97e7786086ac8b69b7eb7da798592036251291d34e9791cde019360015551908152a180f35b6020608492519162461bcd60e51b8352820152602260248201527f5265776172642072617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b5050346101675781600319360112610167576020906003549051908152f35b505034610167578160031936011261016757905490516001600160a01b039091168152602090f35b5050346101675760203660031901126101675760209181906001600160a01b03610a53610e6c565b1681526009845220549051908152f35b5050346101675781600319360112610167576020906002549051908152f35b5050346101675781600319360112610167576020906006549051908152f35b505034610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8334610b3f5780600319360112610b3f57610afe610e87565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b919050346101f25760203660031901126101f257813591610b61610e87565b42831115610bf157600654831115610ba55750816020917f37d37b8940cc1ec723111799f54132501e05042cd219649e575e84e5c36f3b5e9360075551908152a180f35b6020608492519162461bcd60e51b8352820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152fd5b6020606492519162461bcd60e51b8352820152601e60248201527f456e642074696d65206d75737420626520696e207468652066757475726500006044820152fd5b5050346101675781600319360112610167576020906001549051908152f35b5050346101675781600319360112610167576020906007549051908152f35b919050346101f2576020908160031936011261092e57823592610c92610f16565b81554260035533610deb575b8315610db65733855260088352838286205410610d7557908284809493610cca610d0d97600254610eb3565b60025533885260088352838820610ce2838254610eb3565b9055835163a9059cbb60e01b8152339181019182526020820192909252909586918291604090910190565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610453577f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d593946108435750519283523392a280f35b82606492519162461bcd60e51b8352820152601e60248201527f576974686472617720616d6f756e742065786365656473207374616b656400006044820152fd5b82606492519162461bcd60e51b83528201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152fd5b610df433610f9b565b338652600a84528286205580546009845282862055610c9e565b5050346101675760203660031901126101675760209181906001600160a01b03610e36610e6c565b168152600a845220549051908152f35b50503461016757602036600319011261016757602090610231610e67610e6c565b610f9b565b600435906001600160a01b0382168203610e8257565b600080fd5b6000546001600160a01b03163303610e9b57565b60405163118cdaa760e01b8152336004820152602490fd5b91908203918211610ec057565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610ec057565b8115610ef3570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610ec057565b60025480158015610f90575b610f8957600754804211600014610f82575b60035480821115610f7957610f7692610f6b610f62610f59610f709460045496610eb3565b60015490610ed6565b60055490610ed6565b610ee9565b90610f09565b90565b50505060045490565b5042610f34565b5060045490565b506006544210610f22565b610f769060018060a01b0316604060008281526008602052610fe9610fe083832054610fda610fc8610f16565b87865260096020528686205490610eb3565b90610ed6565b60055490610ee9565b928152600a602052205490610f09565b90601f8019910116810190811067ffffffffffffffff82111761101b57604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610e8257518015158103610e82579056fea26469706673582212209d6001e61e88a36cddb4175f27d23a7ed4fdf3ce6613d014aa622d1213a5400164736f6c63430008140033",
              "opcodes": "PUSH1 0xC0 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH3 0x290 JUMPI PUSH1 0xC0 DUP2 PUSH3 0x1364 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x25 DUP3 DUP6 PUSH3 0x295 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x290 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH3 0x290 JUMPI PUSH1 0x20 SWAP2 PUSH3 0x57 DUP4 DUP3 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP1 PUSH3 0x65 DUP7 DUP3 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xA0 PUSH1 0x80 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP2 DUP8 ISZERO PUSH3 0x278 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP11 OR DUP3 SSTORE DUP11 MLOAD SWAP2 SWAP10 SWAP1 DUP9 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP12 DUP1 LOG3 DUP4 DUP6 LT ISZERO PUSH3 0x22B JUMPI POP PUSH1 0x80 MSTORE DUP4 PUSH1 0xA0 MSTORE PUSH1 0x1 SSTORE DUP2 PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH1 0x3 SSTORE AND DUP2 DUP2 ISZERO PUSH1 0x0 EQ PUSH3 0x1AD JUMPI POP POP PUSH1 0x12 SWAP1 JUMPDEST PUSH1 0x1E DUP3 LT ISZERO PUSH3 0x16A JUMPI POP PUSH1 0x1E SUB SWAP1 PUSH1 0x1E DUP3 GT PUSH3 0x156 JUMPI PUSH1 0x4D DUP3 GT PUSH3 0x156 JUMPI POP PUSH1 0xA EXP PUSH1 0x5 SSTORE MLOAD PUSH2 0x107F SWAP1 DUP2 PUSH3 0x2E5 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x587 ADD MSTORE DUP2 DUP2 PUSH2 0x7DF ADD MSTORE DUP2 DUP2 PUSH2 0xAB6 ADD MSTORE PUSH2 0xD12 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x138 ADD MSTORE DUP2 DUP2 PUSH2 0x2A2 ADD MSTORE PUSH2 0x5AF ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP5 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520696E666572696F7220746F20333000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH3 0x221 JUMPI DUP4 SWAP1 PUSH3 0x1DE JUMPI JUMPDEST PUSH1 0xFF SWAP2 POP AND SWAP1 PUSH3 0xEB JUMP JUMPDEST POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x219 JUMPI JUMPDEST PUSH3 0x1F7 DUP2 DUP4 PUSH3 0x295 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x215 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH3 0x215 JUMPI PUSH1 0xFF SWAP1 PUSH3 0x1D2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x1EB JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6D65 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x2B9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x290 JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x20 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x8CC262 EQ PUSH2 0xE46 JUMPI DUP2 PUSH4 0x660F1E8 EQ PUSH2 0xE0E JUMPI DUP2 PUSH4 0x2E1A7D4D EQ PUSH2 0xC71 JUMPI DUP2 PUSH4 0x3197CBB6 EQ PUSH2 0xC52 JUMPI DUP2 PUSH4 0x5D773B2C EQ PUSH2 0xC33 JUMPI DUP2 PUSH4 0x6AB3846B EQ PUSH2 0xB42 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0xAE5 JUMPI DUP2 PUSH4 0x72F702F3 EQ PUSH2 0xAA1 JUMPI DUP2 PUSH4 0x78E97925 EQ PUSH2 0xA82 JUMPI DUP2 PUSH4 0x817B1CD2 EQ PUSH2 0xA63 JUMPI DUP2 PUSH4 0x8B876347 EQ PUSH2 0xA2B JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xA03 JUMPI DUP2 PUSH4 0x9231CF74 EQ PUSH2 0x9E4 JUMPI DUP2 PUSH4 0x9EF3A261 EQ PUSH2 0x932 JUMPI DUP2 PUSH4 0xA694FC3A EQ PUSH2 0x74C JUMPI DUP2 PUSH4 0xACC3A939 EQ PUSH2 0x714 JUMPI DUP2 PUSH4 0xB51609B4 EQ PUSH2 0x545 JUMPI DUP2 PUSH4 0xB88A802F EQ PUSH2 0x257 JUMPI DUP2 PUSH4 0xCCD34CD5 EQ PUSH2 0x238 JUMPI DUP2 PUSH4 0xCD3DAF9D EQ PUSH2 0x214 JUMPI DUP2 PUSH4 0xDF136D65 EQ PUSH2 0x1F6 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x16B JUMPI POP PUSH4 0xF7C618C1 SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x186 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH2 0x18F PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x1DC JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F2 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x231 PUSH2 0xF16 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x272 PUSH2 0xF16 JUMP JUMPDEST DUP3 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0x520 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP3 DUP4 ISZERO PUSH2 0x4E9 JUMPI CALLER DUP6 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP6 SWAP1 SSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x390 JUMPI POP DUP5 DUP1 DUP1 DUP1 DUP8 CALLER GAS CALL RETURNDATASIZE ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x378 JUMPI DUP4 MLOAD SWAP1 PUSH2 0x304 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP8 ADD DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP6 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x341 JUMPI POP SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP2 JUMPDEST MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH2 0x30D JUMP JUMPDEST SWAP1 DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP3 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4DF JUMPI SWAP1 DUP7 SWAP2 DUP9 SWAP2 PUSH2 0x4AA JUMPI JUMPDEST POP LT PUSH2 0x45D JUMPI DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE SWAP5 SWAP4 SWAP3 SWAP2 DUP4 SWAP2 DUP7 SWAP2 SWAP1 DUP3 SWAP1 DUP10 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP4 SWAP5 PUSH2 0x426 JUMPI JUMPDEST POP PUSH2 0x337 JUMP JUMPDEST PUSH2 0x445 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x44C JUMPI JUMPDEST PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1031 JUMP JUMPDEST POP CODESIZE PUSH2 0x420 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x433 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742072657761726420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x4D8 JUMPI JUMPDEST PUSH2 0x4C3 DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4D4 JUMPI DUP6 SWAP1 MLOAD CODESIZE PUSH2 0x3BB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4B9 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x529 CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SSTORE DUP2 SLOAD PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SSTORE PUSH2 0x27E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x560 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP3 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x4D4 JUMPI DUP4 SWAP1 PUSH2 0x582 PUSH2 0xE87 JUMP JUMPDEST AND SWAP3 DUP1 PUSH32 0x0 AND DUP5 EQ PUSH2 0x6D1 JUMPI PUSH32 0x0 AND DUP4 EQ PUSH2 0x68E JUMPI ISZERO PUSH2 0x64B JUMPI DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x642 JUMPI POP PUSH2 0x627 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x63E SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772072657761726420746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177207374616B696E6720746F6B656E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x73C PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x92E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x8ED JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x8B5 JUMPI PUSH2 0x77E PUSH2 0xF16 JUMP JUMPDEST DUP5 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0x892 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x860 JUMPI PUSH2 0x79C DUP4 PUSH1 0x2 SLOAD PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP6 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP6 KECCAK256 PUSH2 0x7B4 DUP5 DUP3 SLOAD PUSH2 0xF09 JUMP JUMPDEST SWAP1 SSTORE DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP4 SWAP1 MSTORE DUP2 DUP5 PUSH1 0x64 DUP2 DUP9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP4 SWAP5 PUSH2 0x843 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x859 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x44C JUMPI PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP CODESIZE PUSH2 0x838 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x89B CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP7 KECCAK256 SSTORE DUP4 SLOAD PUSH1 0x9 DUP4 MSTORE DUP2 DUP7 KECCAK256 SSTORE PUSH2 0x78A JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD185ADA5B99C81C195C9A5BD908195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67206E6F74207374617274656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x951 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x959 PUSH2 0xF16 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x3 SSTORE DUP3 ISZERO PUSH2 0x997 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x41D466EBD06FB97E7786086AC8B69B7EB7DA798592036251291D34E9791CDE01 SWAP4 PUSH1 0x1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA53 PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0xB3F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB3F JUMPI PUSH2 0xAFE PUSH2 0xE87 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB61 PUSH2 0xE87 JUMP JUMPDEST TIMESTAMP DUP4 GT ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x6 SLOAD DUP4 GT ISZERO PUSH2 0xBA5 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x37D37B8940CC1EC723111799F54132501E05042CD219649E575E84E5C36F3B5E SWAP4 PUSH1 0x7 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x92E JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0xC92 PUSH2 0xF16 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0xDEB JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xDB6 JUMPI CALLER DUP6 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 DUP3 DUP7 KECCAK256 SLOAD LT PUSH2 0xD75 JUMPI SWAP1 DUP3 DUP5 DUP1 SWAP5 SWAP4 PUSH2 0xCCA PUSH2 0xD0D SWAP8 PUSH1 0x2 SLOAD PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP9 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 DUP9 KECCAK256 PUSH2 0xCE2 DUP4 DUP3 SLOAD PUSH2 0xEB3 JUMP JUMPDEST SWAP1 SSTORE DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP6 DUP7 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP4 SWAP5 PUSH2 0x843 JUMPI POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E742065786365656473207374616B65640000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDF4 CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xA DUP5 MSTORE DUP3 DUP7 KECCAK256 SSTORE DUP1 SLOAD PUSH1 0x9 DUP5 MSTORE DUP3 DUP7 KECCAK256 SSTORE PUSH2 0xC9E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE36 PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x231 PUSH2 0xE67 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE82 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE9B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xEC0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xEC0 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEF3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEC0 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0xF90 JUMPI JUMPDEST PUSH2 0xF89 JUMPI PUSH1 0x7 SLOAD DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0xF82 JUMPI JUMPDEST PUSH1 0x3 SLOAD DUP1 DUP3 GT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF76 SWAP3 PUSH2 0xF6B PUSH2 0xF62 PUSH2 0xF59 PUSH2 0xF70 SWAP5 PUSH1 0x4 SLOAD SWAP7 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0xEE9 JUMP JUMPDEST SWAP1 PUSH2 0xF09 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP TIMESTAMP PUSH2 0xF34 JUMP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0xF22 JUMP JUMPDEST PUSH2 0xF76 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0xFE9 PUSH2 0xFE0 DUP4 DUP4 KECCAK256 SLOAD PUSH2 0xFDA PUSH2 0xFC8 PUSH2 0xF16 JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP7 DUP7 KECCAK256 SLOAD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xEE9 JUMP JUMPDEST SWAP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0xF09 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x101B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE82 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xE82 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH1 0x1 0xE6 0x1E DUP9 LOG3 PUSH13 0xDDB4175F27D23A7ED4FDF3CE66 SGT 0xD0 EQ 0xAA PUSH3 0x2D1213 0xA5 BLOCKHASH ADD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "266:6861:4:-:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;266:6861:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;1273:26:0;;;1269:95;;-1:-1:-1;266:6861:4;;-1:-1:-1;;;;;;266:6861:4;;;;;;;;-1:-1:-1;;266:6861:4;;;3052:40:0;-1:-1:-1;;3052:40:0;1700:21:4;;;266:6861;;;1771:28;266:6861;1771:28;1809:26;266:6861;1809:26;266:6861;;;1897:22;266:6861;1929:18;266:6861;1957:27;266:6861;;2025:41;;;:96;266:6861;;;2025:96;;2077:2;2025:96;;2161:2;2139:24;;266:6861;;;;2161:2;266:6861;;2161:2;266:6861;;;;;;;;;;;;2201:67;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2025:96;266:6861;;-1:-1:-1;;;2098:22:4;;266:6861;;;2098:22;;266:6861;;2098:22;;;;;;;;;;2025:96;266:6861;;;;2025:96;;;2098:22;;;;;;;;;;;;;;;:::i;:::-;;;266:6861;;;;;;;;;;;;;2098:22;;;266:6861;;;;2098:22;;;;;;266:6861;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;1269:95:0;266:6861:4;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;266:6861:4;;;1322:31:0;266:6861:4;-1:-1:-1;266:6861:4;;;;;;;-1:-1:-1;;266:6861:4;;;;-1:-1:-1;;;;;266:6861:4;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;266:6861:4;;;;;;:::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 3692,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 4145,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "checked_add_uint256": {
                  "entryPoint": 3849,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_uint256": {
                  "entryPoint": 3817,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_uint256": {
                  "entryPoint": 3798,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_uint256": {
                  "entryPoint": 3763,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 4089,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 3719,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_earned": {
                  "entryPoint": 3995,
                  "id": 580,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_rewardPerToken": {
                  "entryPoint": 3862,
                  "id": 551,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {
                "292": [
                  {
                    "length": 32,
                    "start": 1415
                  },
                  {
                    "length": 32,
                    "start": 2015
                  },
                  {
                    "length": 32,
                    "start": 2742
                  },
                  {
                    "length": 32,
                    "start": 3346
                  }
                ],
                "295": [
                  {
                    "length": 32,
                    "start": 312
                  },
                  {
                    "length": 32,
                    "start": 674
                  },
                  {
                    "length": 32,
                    "start": 1455
                  }
                ]
              },
              "linkReferences": {},
              "object": "60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c9081628cc26214610e465781630660f1e814610e0e5781632e1a7d4d14610c715781633197cbb614610c525781635d773b2c14610c335781636ab3846b14610b42578163715018a614610ae557816372f702f314610aa157816378e9792514610a82578163817b1cd214610a635781638b87634714610a2b5781638da5cb5b14610a035781639231cf74146109e45781639ef3a26114610932578163a694fc3a1461074c578163acc3a93914610714578163b51609b414610545578163b88a802f14610257578163ccd34cd514610238578163cd3daf9d14610214578163df136d65146101f6578163f2fde38b1461016b575063f7c618c1036100115734610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b9050346101f25760203660031901126101f257610186610e6c565b9061018f610e87565b6001600160a01b039182169283156101dc57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9050346101f257826003193601126101f25760209250549051908152f35b505034610167578160031936011261016757602090610231610f16565b9051908152f35b5050346101675781600319360112610167576020906005549051908152f35b919050346101f257826003193601126101f257610272610f16565b82554260035533610520575b338352602090600a8252808420549283156104e957338552600a83528185208590557f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168061039057508480808087335af13d1561038b573d67ffffffffffffffff811161037857835190610304601f8201601f1916870183610ff9565b815286853d92013e5b156103415750907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241915b519283523392a280f35b82606492519162461bcd60e51b83528201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b634e487b7160e01b875260418352602487fd5b61030d565b9082516370a0823160e01b815230828201528481602481865afa9081156104df5790869188916104aa575b501061045d57825163a9059cbb60e01b8152339181019182526020820186905294939291839186919082908990829060400103925af1938415610453577f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419394610426575b50610337565b61044590833d851161044c575b61043d8183610ff9565b810190611031565b5038610420565b503d610433565b81513d87823e3d90fd5b825162461bcd60e51b8152908101849052602160248201527f496e73756666696369656e742072657761726420746f6b656e2062616c616e636044820152606560f81b6064820152608490fd5b809250868092503d83116104d8575b6104c38183610ff9565b810103126104d457859051386103bb565b8680fd5b503d6104b9565b84513d89823e3d90fd5b82606492519162461bcd60e51b835282015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152fd5b61052933610f9b565b338452600a60205281842055815460096020528184205561027e565b9050346101f25760603660031901126101f257610560610e6c565b6001600160a01b039060443590828216908183036104d4578390610582610e87565b1692807f00000000000000000000000000000000000000000000000000000000000000001684146106d1577f000000000000000000000000000000000000000000000000000000000000000016831461068e571561064b57835163a9059cbb60e01b81526001600160a01b039091169281019283526024356020848101919091529093929091849182908790829060400103925af19081156106425750610627575080f35b61063e9060203d811161044c5761043d8183610ff9565b5080f35b513d84823e3d90fd5b835162461bcd60e51b8152602081850152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b845162461bcd60e51b8152602081860152601c60248201527f43616e6e6f742077697468647261772072657761726420746f6b656e000000006044820152606490fd5b855162461bcd60e51b8152602081870152601d60248201527f43616e6e6f74207769746864726177207374616b696e6720746f6b656e0000006044820152606490fd5b5050346101675760203660031901126101675760209181906001600160a01b0361073c610e6c565b1681526008845220549051908152f35b919050346101f25760208060031936011261092e5782359160065442106108ed5760075442116108b55761077e610f16565b84554260035533610892575b82156108605761079c83600254610f09565b600255338552600882528085206107b4848254610f09565b905580516323b872dd60e01b81523394810194909452306024850152604484018390528184606481887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610453577f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9394610843575b50519283523392a280f35b61085990833d851161044c5761043d8183610ff9565b5038610838565b5162461bcd60e51b81529283015250600e60248201526d043616e6e6f74207374616b6520360941b6044820152606490fd5b61089b33610f9b565b338652600a8352818620558354600983528186205561078a565b5162461bcd60e51b81529283015250601460248201527314dd185ada5b99c81c195c9a5bd908195b99195960621b6044820152606490fd5b5162461bcd60e51b81529283015250601760248201527f5374616b696e67206e6f742073746172746564207965740000000000000000006044820152606490fd5b8380fd5b919050346101f25760203660031901126101f257813591610951610e87565b610959610f16565b81554260035582156109975750816020917f41d466ebd06fb97e7786086ac8b69b7eb7da798592036251291d34e9791cde019360015551908152a180f35b6020608492519162461bcd60e51b8352820152602260248201527f5265776172642072617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b5050346101675781600319360112610167576020906003549051908152f35b505034610167578160031936011261016757905490516001600160a01b039091168152602090f35b5050346101675760203660031901126101675760209181906001600160a01b03610a53610e6c565b1681526009845220549051908152f35b5050346101675781600319360112610167576020906002549051908152f35b5050346101675781600319360112610167576020906006549051908152f35b505034610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8334610b3f5780600319360112610b3f57610afe610e87565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b919050346101f25760203660031901126101f257813591610b61610e87565b42831115610bf157600654831115610ba55750816020917f37d37b8940cc1ec723111799f54132501e05042cd219649e575e84e5c36f3b5e9360075551908152a180f35b6020608492519162461bcd60e51b8352820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152fd5b6020606492519162461bcd60e51b8352820152601e60248201527f456e642074696d65206d75737420626520696e207468652066757475726500006044820152fd5b5050346101675781600319360112610167576020906001549051908152f35b5050346101675781600319360112610167576020906007549051908152f35b919050346101f2576020908160031936011261092e57823592610c92610f16565b81554260035533610deb575b8315610db65733855260088352838286205410610d7557908284809493610cca610d0d97600254610eb3565b60025533885260088352838820610ce2838254610eb3565b9055835163a9059cbb60e01b8152339181019182526020820192909252909586918291604090910190565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610453577f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d593946108435750519283523392a280f35b82606492519162461bcd60e51b8352820152601e60248201527f576974686472617720616d6f756e742065786365656473207374616b656400006044820152fd5b82606492519162461bcd60e51b83528201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152fd5b610df433610f9b565b338652600a84528286205580546009845282862055610c9e565b5050346101675760203660031901126101675760209181906001600160a01b03610e36610e6c565b168152600a845220549051908152f35b50503461016757602036600319011261016757602090610231610e67610e6c565b610f9b565b600435906001600160a01b0382168203610e8257565b600080fd5b6000546001600160a01b03163303610e9b57565b60405163118cdaa760e01b8152336004820152602490fd5b91908203918211610ec057565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610ec057565b8115610ef3570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610ec057565b60025480158015610f90575b610f8957600754804211600014610f82575b60035480821115610f7957610f7692610f6b610f62610f59610f709460045496610eb3565b60015490610ed6565b60055490610ed6565b610ee9565b90610f09565b90565b50505060045490565b5042610f34565b5060045490565b506006544210610f22565b610f769060018060a01b0316604060008281526008602052610fe9610fe083832054610fda610fc8610f16565b87865260096020528686205490610eb3565b90610ed6565b60055490610ee9565b928152600a602052205490610f09565b90601f8019910116810190811067ffffffffffffffff82111761101b57604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610e8257518015158103610e82579056fea26469706673582212209d6001e61e88a36cddb4175f27d23a7ed4fdf3ce6613d014aa622d1213a5400164736f6c63430008140033",
              "opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x20 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x8CC262 EQ PUSH2 0xE46 JUMPI DUP2 PUSH4 0x660F1E8 EQ PUSH2 0xE0E JUMPI DUP2 PUSH4 0x2E1A7D4D EQ PUSH2 0xC71 JUMPI DUP2 PUSH4 0x3197CBB6 EQ PUSH2 0xC52 JUMPI DUP2 PUSH4 0x5D773B2C EQ PUSH2 0xC33 JUMPI DUP2 PUSH4 0x6AB3846B EQ PUSH2 0xB42 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0xAE5 JUMPI DUP2 PUSH4 0x72F702F3 EQ PUSH2 0xAA1 JUMPI DUP2 PUSH4 0x78E97925 EQ PUSH2 0xA82 JUMPI DUP2 PUSH4 0x817B1CD2 EQ PUSH2 0xA63 JUMPI DUP2 PUSH4 0x8B876347 EQ PUSH2 0xA2B JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xA03 JUMPI DUP2 PUSH4 0x9231CF74 EQ PUSH2 0x9E4 JUMPI DUP2 PUSH4 0x9EF3A261 EQ PUSH2 0x932 JUMPI DUP2 PUSH4 0xA694FC3A EQ PUSH2 0x74C JUMPI DUP2 PUSH4 0xACC3A939 EQ PUSH2 0x714 JUMPI DUP2 PUSH4 0xB51609B4 EQ PUSH2 0x545 JUMPI DUP2 PUSH4 0xB88A802F EQ PUSH2 0x257 JUMPI DUP2 PUSH4 0xCCD34CD5 EQ PUSH2 0x238 JUMPI DUP2 PUSH4 0xCD3DAF9D EQ PUSH2 0x214 JUMPI DUP2 PUSH4 0xDF136D65 EQ PUSH2 0x1F6 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x16B JUMPI POP PUSH4 0xF7C618C1 SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x186 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH2 0x18F PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x1DC JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F2 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x231 PUSH2 0xF16 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x272 PUSH2 0xF16 JUMP JUMPDEST DUP3 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0x520 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP3 DUP4 ISZERO PUSH2 0x4E9 JUMPI CALLER DUP6 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP6 SWAP1 SSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x390 JUMPI POP DUP5 DUP1 DUP1 DUP1 DUP8 CALLER GAS CALL RETURNDATASIZE ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x378 JUMPI DUP4 MLOAD SWAP1 PUSH2 0x304 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP8 ADD DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP6 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x341 JUMPI POP SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP2 JUMPDEST MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH2 0x30D JUMP JUMPDEST SWAP1 DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP3 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4DF JUMPI SWAP1 DUP7 SWAP2 DUP9 SWAP2 PUSH2 0x4AA JUMPI JUMPDEST POP LT PUSH2 0x45D JUMPI DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE SWAP5 SWAP4 SWAP3 SWAP2 DUP4 SWAP2 DUP7 SWAP2 SWAP1 DUP3 SWAP1 DUP10 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP4 SWAP5 PUSH2 0x426 JUMPI JUMPDEST POP PUSH2 0x337 JUMP JUMPDEST PUSH2 0x445 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x44C JUMPI JUMPDEST PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1031 JUMP JUMPDEST POP CODESIZE PUSH2 0x420 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x433 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742072657761726420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x4D8 JUMPI JUMPDEST PUSH2 0x4C3 DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4D4 JUMPI DUP6 SWAP1 MLOAD CODESIZE PUSH2 0x3BB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4B9 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x529 CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SSTORE DUP2 SLOAD PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SSTORE PUSH2 0x27E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x560 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP3 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x4D4 JUMPI DUP4 SWAP1 PUSH2 0x582 PUSH2 0xE87 JUMP JUMPDEST AND SWAP3 DUP1 PUSH32 0x0 AND DUP5 EQ PUSH2 0x6D1 JUMPI PUSH32 0x0 AND DUP4 EQ PUSH2 0x68E JUMPI ISZERO PUSH2 0x64B JUMPI DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x642 JUMPI POP PUSH2 0x627 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x63E SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772072657761726420746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177207374616B696E6720746F6B656E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x73C PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x92E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x8ED JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x8B5 JUMPI PUSH2 0x77E PUSH2 0xF16 JUMP JUMPDEST DUP5 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0x892 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x860 JUMPI PUSH2 0x79C DUP4 PUSH1 0x2 SLOAD PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP6 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP6 KECCAK256 PUSH2 0x7B4 DUP5 DUP3 SLOAD PUSH2 0xF09 JUMP JUMPDEST SWAP1 SSTORE DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP4 SWAP1 MSTORE DUP2 DUP5 PUSH1 0x64 DUP2 DUP9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP4 SWAP5 PUSH2 0x843 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x859 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x44C JUMPI PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP CODESIZE PUSH2 0x838 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x89B CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP7 KECCAK256 SSTORE DUP4 SLOAD PUSH1 0x9 DUP4 MSTORE DUP2 DUP7 KECCAK256 SSTORE PUSH2 0x78A JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD185ADA5B99C81C195C9A5BD908195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67206E6F74207374617274656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x951 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x959 PUSH2 0xF16 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x3 SSTORE DUP3 ISZERO PUSH2 0x997 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x41D466EBD06FB97E7786086AC8B69B7EB7DA798592036251291D34E9791CDE01 SWAP4 PUSH1 0x1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA53 PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0xB3F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB3F JUMPI PUSH2 0xAFE PUSH2 0xE87 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB61 PUSH2 0xE87 JUMP JUMPDEST TIMESTAMP DUP4 GT ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x6 SLOAD DUP4 GT ISZERO PUSH2 0xBA5 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x37D37B8940CC1EC723111799F54132501E05042CD219649E575E84E5C36F3B5E SWAP4 PUSH1 0x7 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x92E JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0xC92 PUSH2 0xF16 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0xDEB JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xDB6 JUMPI CALLER DUP6 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 DUP3 DUP7 KECCAK256 SLOAD LT PUSH2 0xD75 JUMPI SWAP1 DUP3 DUP5 DUP1 SWAP5 SWAP4 PUSH2 0xCCA PUSH2 0xD0D SWAP8 PUSH1 0x2 SLOAD PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP9 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 DUP9 KECCAK256 PUSH2 0xCE2 DUP4 DUP3 SLOAD PUSH2 0xEB3 JUMP JUMPDEST SWAP1 SSTORE DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP6 DUP7 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP4 SWAP5 PUSH2 0x843 JUMPI POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E742065786365656473207374616B65640000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDF4 CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xA DUP5 MSTORE DUP3 DUP7 KECCAK256 SSTORE DUP1 SLOAD PUSH1 0x9 DUP5 MSTORE DUP3 DUP7 KECCAK256 SSTORE PUSH2 0xC9E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE36 PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x231 PUSH2 0xE67 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE82 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE9B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xEC0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xEC0 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEF3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEC0 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0xF90 JUMPI JUMPDEST PUSH2 0xF89 JUMPI PUSH1 0x7 SLOAD DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0xF82 JUMPI JUMPDEST PUSH1 0x3 SLOAD DUP1 DUP3 GT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF76 SWAP3 PUSH2 0xF6B PUSH2 0xF62 PUSH2 0xF59 PUSH2 0xF70 SWAP5 PUSH1 0x4 SLOAD SWAP7 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0xEE9 JUMP JUMPDEST SWAP1 PUSH2 0xF09 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP TIMESTAMP PUSH2 0xF34 JUMP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0xF22 JUMP JUMPDEST PUSH2 0xF76 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0xFE9 PUSH2 0xFE0 DUP4 DUP4 KECCAK256 SLOAD PUSH2 0xFDA PUSH2 0xFC8 PUSH2 0xF16 JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP7 DUP7 KECCAK256 SLOAD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xEE9 JUMP JUMPDEST SWAP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0xF09 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x101B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE82 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xE82 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH1 0x1 0xE6 0x1E DUP9 LOG3 PUSH13 0xDDB4175F27D23A7ED4FDF3CE66 SGT 0xD0 EQ 0xAA PUSH3 0x2D1213 0xA5 BLOCKHASH ADD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "266:6861:4:-:0;;;;;;;;;;;;-1:-1:-1;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;360:43;-1:-1:-1;;;;;266:6861:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;266:6861:4;;;;;;:::i;:::-;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;266:6861:4;;;;2627:22:0;;2623:91;;-1:-1:-1;;266:6861:4;;-1:-1:-1;;;;;;266:6861:4;;;;;;;3052:40:0;266:6861:4;;3052:40:0;266:6861:4;;2623:91:0;266:6861:4;-1:-1:-1;;;2672:31:0;;;;;266:6861:4;;;;;2672:31:0;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;734:31;266:6861;;;;;;;;;;;;;;;;;;;;;;2415:16;;:::i;:::-;266:6861;;2458:15;266:6861;;4989:10;2484:158;;266:6861;4989:10;266:6861;;;;5028:11;266:6861;;;;;;5069:10;;;266:6861;;4989:10;266:6861;;5028:11;266:6861;;;;;;;;5171:11;-1:-1:-1;;;;;266:6861:4;5163:34;266:6861;;4989:10;;;;;;;5232:34;;266:6861;;;;;;;;;;;;;;;;;-1:-1:-1;;266:6861:4;;;;;:::i;:::-;;;;;;;;;;;;;5159:394;;5568:33;5159:394;;266:6861;;;;4989:10;5568:33;;266:6861;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;5159:394;266:6861;;;;;;5375:36;;5405:4;5375:36;;;266:6861;5375:36;;266:6861;5375:36;;;;;;;;;;;;;;;;5159:394;5375:46;;266:6861;;;;-1:-1:-1;;;5502:40:4;;4989:10;5502:40;;;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;5502:40;;;;;;;;;5568:33;5502:40;;;;5159:394;;;;5502:40;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;266:6861;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;5375:36;;;;;;;;;;;;;;;;;;:::i;:::-;;;266:6861;;;;;;;5375:36;;;266:6861;;;;5375:36;;;;;;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;2484:158;2548:15;4989:10;2548:15;:::i;:::-;4989:10;266:6861;;2525:11;266:6861;;;;;;;;2577:22;266:6861;;;;;;2484:158;;266:6861;;;;;;;;-1:-1:-1;;266:6861:4;;;;;;:::i;:::-;-1:-1:-1;;;;;266:6861:4;;;;;;;;;;;;;1500:62:0;;;;:::i;:::-;266:6861:4;6847:12;;;266:6861;6830:30;;266:6861;;6929:11;266:6861;6912:29;;266:6861;;6992:16;266:6861;;;;-1:-1:-1;;;7049:34:4;;-1:-1:-1;;;;;266:6861:4;;;7049:34;;;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;;;7049:34;;;;;;;;;;;;266:6861;;;7049:34;;;266:6861;7049:34;;;;;;;;;:::i;:::-;;266:6861;;7049:34;266:6861;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;266:6861:4;;;;;;;;-1:-1:-1;;;;;266:6861:4;;:::i;:::-;;;;921:45;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2806:9;266:6861;2787:15;:28;266:6861;;2880:7;266:6861;2787:15;2861:26;266:6861;;2415:16;;:::i;:::-;266:6861;;2787:15;266:6861;;4137:10;2484:158;;266:6861;4167:10;;266:6861;;4206:21;266:6861;4206:21;266:6861;4206:21;:::i;:::-;;266:6861;4137:10;266:6861;;4237:10;266:6861;;;;;4237:32;266:6861;;;4237:32;:::i;:::-;266:6861;;;;-1:-1:-1;;;4280:60:4;;4137:10;4280:60;;;266:6861;;;;4326:4;266:6861;;;;;;;;;;;;;;;4280:12;-1:-1:-1;;;;;266:6861:4;4280:60;;;;;;;4355:26;4280:60;;;;266:6861;;;;;;4137:10;4355:26;;266:6861;;4280:60;;;;;;;;;;;;;:::i;:::-;;;;;266:6861;;-1:-1:-1;;;266:6861:4;;;;;;-1:-1:-1;266:6861:4;;;;;-1:-1:-1;;;266:6861:4;;;;;;;2484:158;2548:15;4137:10;2548:15;:::i;:::-;4137:10;266:6861;;2525:11;266:6861;;;;;;;;2577:22;266:6861;;;;;;2484:158;;266:6861;;-1:-1:-1;;;266:6861:4;;;;;;-1:-1:-1;266:6861:4;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;-1:-1:-1;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;266:6861:4;;;;;;1500:62:0;;;:::i;:::-;2415:16:4;;:::i;:::-;266:6861;;2458:15;266:6861;;6275:17;;266:6861;;;;;;6391:32;266:6861;;;;;;;6391:32;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;266:6861:4;;;;;;;;;;;;;;;;-1:-1:-1;;266:6861:4;;;;;;;;-1:-1:-1;;;;;266:6861:4;;:::i;:::-;;;;998:57;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;520:26;266:6861;;;;;;;;;;;;;;;;;;;;;;;796:24;266:6861;;;;;;;;;;;;;;;;;;;;;;310:44;-1:-1:-1;;;;;266:6861:4;;;;;;;;;;;;;;;;;;;1500:62:0;;:::i;:::-;266:6861:4;;-1:-1:-1;;;;;;266:6861:4;;;;;;-1:-1:-1;;;;;266:6861:4;3052:40:0;266:6861:4;;3052:40:0;266:6861:4;;;;;;;;;;;;;;-1:-1:-1;;266:6861:4;;;;;;1500:62:0;;;:::i;:::-;5834:15:4;5821:28;;266:6861;;;5915:9;266:6861;5902:22;;266:6861;;;;;;;6007:26;266:6861;5972:20;266:6861;;;;;6007:26;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:34;266:6861;;;;;;;;;;;;;;;;;;;;;;;860:22;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;2415:16;;;:::i;:::-;266:6861;;2458:15;266:6861;;4561:10;2484:158;;266:6861;4591:10;;266:6861;;4561:10;266:6861;;4641:10;266:6861;;;;;;;4641:32;266:6861;;;;;;;;4719:21;4793:41;266:6861;4719:21;266:6861;4719:21;:::i;:::-;;266:6861;4561:10;266:6861;;4641:10;266:6861;;;;;4750:32;266:6861;;;4750:32;:::i;:::-;266:6861;;;;-1:-1:-1;;;4793:41:4;;4561:10;4793:41;;;266:6861;;;;;;;;;;;;;;;;;;;;;;4793:41;;266:6861;;4793:12;-1:-1:-1;;;;;266:6861:4;4793:41;;;;;;;4849:29;4793:41;;;;266:6861;;;;;4561:10;4849:29;;266:6861;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;266:6861:4;;;;;2484:158;2548:15;4561:10;2548:15;:::i;:::-;4561:10;266:6861;;2525:11;266:6861;;;;;;;;2577:22;266:6861;;;;;;2484:158;;266:6861;;;;;;;;-1:-1:-1;;266:6861:4;;;;;;;;-1:-1:-1;;;;;266:6861:4;;:::i;:::-;;;;1085:46;266:6861;;;;;;;;;;;;;;;;;;-1:-1:-1;;266:6861:4;;;;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;266:6861:4;;;;;;:::o;:::-;;;;1796:162:0;1710:6;266:6861:4;-1:-1:-1;;;;;266:6861:4;735:10:3;1855:23:0;1851:101;;1796:162::o;1851:101::-;266:6861:4;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;266:6861:4;;;1901:40:0;266:6861:4;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;3036:529::-;3106:11;266:6861;3106:16;;:47;;;;3036:529;3102:105;;3263:7;266:6861;3245:15;;:25;:53;:25;;;:53;3333:14;266:6861;3312:35;;;;3308:93;;3430:128;266:6861;3466:77;:58;3467:34;3465:93;266:6861;3430:20;266:6861;3467:34;;:::i;:::-;3505:19;266:6861;3466:58;;:::i;:::-;3527:16;266:6861;3466:77;;:::i;:::-;3465:93;:::i;:::-;3430:128;;:::i;:::-;3036:529;:::o;3308:93::-;266:6861;;;3370:20;266:6861;3363:27;:::o;3245:53::-;:15;;:53;;3102:105;266:6861;3176:20;266:6861;3169:27;:::o;3106:47::-;266:6861;3144:9;266:6861;3126:15;:27;3106:47;;3729:231;3821:132;3729:231;266:6861;;;;;;;-1:-1:-1;266:6861:4;;;3823:10;266:6861;;3822:95;3823:74;266:6861;;;;3846:50;:16;;:::i;:::-;266:6861;;;3865:22;266:6861;;;;;;3846:50;;:::i;:::-;3823:74;;:::i;:::-;3901:16;266:6861;3822:95;;:::i;:::-;266:6861;;;3933:11;266:6861;;;;3821:132;;:::i;266:6861::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "PRECISION_FACTOR()": "ccd34cd5",
              "claimReward()": "b88a802f",
              "earned(address)": "008cc262",
              "endTime()": "3197cbb6",
              "lastRewardTime()": "9231cf74",
              "owner()": "8da5cb5b",
              "recoverERC20(address,uint256,address)": "b51609b4",
              "renounceOwnership()": "715018a6",
              "rewardPerToken()": "cd3daf9d",
              "rewardPerTokenStored()": "df136d65",
              "rewardRatePerSecond()": "5d773b2c",
              "rewardToken()": "f7c618c1",
              "stake(uint256)": "a694fc3a",
              "stakingToken()": "72f702f3",
              "startTime()": "78e97925",
              "totalStaked()": "817b1cd2",
              "transferOwnership(address)": "f2fde38b",
              "updateEndTime(uint256)": "6ab3846b",
              "updateRewardRate(uint256)": "9ef3a261",
              "userRewardPerTokenPaid(address)": "8b876347",
              "userRewards(address)": "0660f1e8",
              "userStaked(address)": "acc3a939",
              "withdraw(uint256)": "2e1a7d4d"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"_stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Metadata\",\"name\":\"_rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRatePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newEndTime\",\"type\":\"uint256\"}],\"name\":\"EndTimeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"RewardRateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PRECISION_FACTOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRatePerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20Metadata\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newEndTime\",\"type\":\"uint256\"}],\"name\":\"updateEndTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRewardRate\",\"type\":\"uint256\"}],\"name\":\"updateRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"earned(address)\":{\"params\":{\"account\":\"The address of the user\"},\"returns\":{\"_0\":\"The total rewards earned by the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverERC20(address,uint256,address)\":{\"params\":{\"amount\":\"The amount of the token to withdraw\",\"to\":\"The address to send the withdrawn tokens to\",\"token\":\"The address of the token to withdraw\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"rewardPerToken()\":{\"returns\":{\"_0\":\"The reward per token scaled by 1e18\"}},\"stake(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to stake\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateEndTime(uint256)\":{\"params\":{\"newEndTime\":\"The new end time for staking and rewards\"}},\"updateRewardRate(uint256)\":{\"params\":{\"newRewardRate\":\"The new reward rate per second\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"The amount of tokens to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimReward()\":{\"notice\":\"Allows a user to claim their rewards\"},\"earned(address)\":{\"notice\":\"Calculates the earned rewards for a user\"},\"recoverERC20(address,uint256,address)\":{\"notice\":\"Allows the owner to withdraw tokens sent to the contract by mistake\"},\"rewardPerToken()\":{\"notice\":\"Calculates the reward per token\"},\"stake(uint256)\":{\"notice\":\"Allows a user to stake tokens\"},\"updateEndTime(uint256)\":{\"notice\":\"Allows the owner to update the end time\"},\"updateRewardRate(uint256)\":{\"notice\":\"Allows the owner to update the reward rate\"},\"withdraw(uint256)\":{\"notice\":\"Allows a user to withdraw staked tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SubnetStakingPool.sol\":\"SubnetStakingPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SubnetStakingPool.sol\":{\"keccak256\":\"0x498c86ce1771990f91ddea97dabd90cd956c09a213f9b18782f18936d93834be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6abd6b05daebb4459c4da4daf53b1a336b43b978fd6dd52dfaad60e13a97de5c\",\"dweb:/ipfs/QmVHr9krcGi1NoT5niVPU5bq3n8WssjynrkKPKeUkKtYb4\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 8,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 297,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "rewardRatePerSecond",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 299,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "totalStaked",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 301,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "lastRewardTime",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 303,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "rewardPerTokenStored",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
              },
              {
                "astId": 305,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "PRECISION_FACTOR",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              },
              {
                "astId": 307,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "startTime",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              },
              {
                "astId": 309,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "endTime",
                "offset": 0,
                "slot": "7",
                "type": "t_uint256"
              },
              {
                "astId": 313,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "userStaked",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 317,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "userRewardPerTokenPaid",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 321,
                "contract": "contracts/SubnetStakingPool.sol:SubnetStakingPool",
                "label": "userRewards",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          }
        }
      },
      "contracts/SubnetStakingPoolFactory.sol": {
        "SubnetStakingPoolFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "initialOwner",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "stakingToken",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "poolAddress",
                  "type": "address"
                }
              ],
              "name": "PoolCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPools",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "stakingToken",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "rewardToken",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardRatePerSecond",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                }
              ],
              "name": "createPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getPool",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getPoolCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080346100bb57601f611abc38819003918201601f19168301916001600160401b038311848410176100c0578084926020946040528339810103126100bb57516001600160a01b0390818116908190036100bb5780156100a257600080546001600160a01b03198116831782556040519316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36119e590816100d78239f35b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c908163068bcd8d1461008a5750806341d1de9714610085578063715018a61461008057806385ac165a1461007b5780638da5cb5b146100765780638eec5d70146100715763f2fde38b1461006c57600080fd5b6103fa565b6103dc565b6103b3565b6101e3565b610177565b610117565b3461011457602036600319011261011457600435906001548210156100e657600190527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601546001600160a01b0316608052607f1960a0016080f35b62461bcd60e51b6080526020608452600d60a4526c092dcecc2d8d2c840d2dcc8caf609b1b60c45260646080fd5b80fd5b34610172576020366003190112610172576004356001548110156101725760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601546040516001600160a01b039091168152602090f35b600080fd5b346101725760008060031936011261011457610191610486565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b6001600160a01b0381160361017257565b346101725760a036600319011261017257600435610200816101d2565b60243561020c816101d2565b6044356064359061033b6103478260843595610226610486565b6001600160a01b038881169861032191610315906102458c15156104b2565b6102508a8c116104fe565b8416998b8b6102a0838d6040519a8b9460208601968793919060889593916bffffffffffffffffffffffff19809260601b16865260601b1660148501526028840152604883015260688201520190565b03966102b4601f199889810183528261056a565b51902099611364996102c860208c01610591565b9a808c5261064c60208d01396040519687953360208801929160a094919796959260c0850198600180881b0392838092168752166020860152166040840152606083015260808201520152565b0383810183528261056a565b6040519384916103356020840180986105a1565b906105a1565b0390810183528261056a565b51906000f5908115610172576103af92610360836105cc565b6040516001600160a01b03841681527f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b90602090a36040516001600160a01b0390911681529081906020820190565b0390f35b34610172576000366003190112610172576000546040516001600160a01b039091168152602090f35b34610172576000366003190112610172576020600154604051908152f35b3461017257602036600319011261017257600435610417816101d2565b61041f610486565b6001600160a01b03908116801561046d57600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b604051631e4fbdf760e01b815260006004820152602490fd5b6000546001600160a01b0316330361049a57565b60405163118cdaa760e01b8152336004820152602490fd5b156104b957565b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207374616b696e6720746f6b656e20616464726573730000006044820152606490fd5b1561050557565b60405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608490fd5b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761058c57604052565b610554565b9061059f604051928361056a565b565b9081519160005b8381106105b9575050016000815290565b80602080928401015181850152016105a8565b6001546801000000000000000081101561058c5760018101806001558110156106355760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03909216919091179055565b634e487b7160e01b600052603260045260246000fdfe60c060409080825234620002905760c08162001364803803809162000025828562000295565b833981010312620002905780516001600160a01b038082169291839003620002905760209162000057838201620002cf565b9062000065868201620002cf565b91606082015160a060808401519301519187156200027857600080546001600160a01b031981168a1782558a5191999088167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08b80a3838510156200022b57506080528360a0526001558160065560075560035516818115600014620001ad5750506012905b601e8210156200016a5750601e0390601e82116200015657604d8211620001565750600a0a6005555161107f9081620002e58239608051818181610587015281816107df01528181610ab60152610d12015260a051818181610138015281816102a201526105af0152f35b634e487b7160e01b81526011600452602490fd5b60649084519062461bcd60e51b82526004820152601660248201527f4d75737420626520696e666572696f7220746f203330000000000000000000006044820152fd5b845163313ce56760e01b815291829060049082905afa801562000221578390620001de575b60ff91501690620000eb565b508181813d831162000219575b620001f7818362000295565b8101031262000215575160ff81168103620002155760ff90620001d2565b8280fd5b503d620001eb565b84513d85823e3d90fd5b62461bcd60e51b815260048101889052602260248201527f53746172742074696d65206d757374206265206265666f726520656e642074696044820152616d6560f01b6064820152608490fd5b8851631e4fbdf760e01b815260006004820152602490fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620002b957604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620002905756fe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c9081628cc26214610e465781630660f1e814610e0e5781632e1a7d4d14610c715781633197cbb614610c525781635d773b2c14610c335781636ab3846b14610b42578163715018a614610ae557816372f702f314610aa157816378e9792514610a82578163817b1cd214610a635781638b87634714610a2b5781638da5cb5b14610a035781639231cf74146109e45781639ef3a26114610932578163a694fc3a1461074c578163acc3a93914610714578163b51609b414610545578163b88a802f14610257578163ccd34cd514610238578163cd3daf9d14610214578163df136d65146101f6578163f2fde38b1461016b575063f7c618c1036100115734610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b9050346101f25760203660031901126101f257610186610e6c565b9061018f610e87565b6001600160a01b039182169283156101dc57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9050346101f257826003193601126101f25760209250549051908152f35b505034610167578160031936011261016757602090610231610f16565b9051908152f35b5050346101675781600319360112610167576020906005549051908152f35b919050346101f257826003193601126101f257610272610f16565b82554260035533610520575b338352602090600a8252808420549283156104e957338552600a83528185208590557f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168061039057508480808087335af13d1561038b573d67ffffffffffffffff811161037857835190610304601f8201601f1916870183610ff9565b815286853d92013e5b156103415750907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241915b519283523392a280f35b82606492519162461bcd60e51b83528201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b634e487b7160e01b875260418352602487fd5b61030d565b9082516370a0823160e01b815230828201528481602481865afa9081156104df5790869188916104aa575b501061045d57825163a9059cbb60e01b8152339181019182526020820186905294939291839186919082908990829060400103925af1938415610453577f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419394610426575b50610337565b61044590833d851161044c575b61043d8183610ff9565b810190611031565b5038610420565b503d610433565b81513d87823e3d90fd5b825162461bcd60e51b8152908101849052602160248201527f496e73756666696369656e742072657761726420746f6b656e2062616c616e636044820152606560f81b6064820152608490fd5b809250868092503d83116104d8575b6104c38183610ff9565b810103126104d457859051386103bb565b8680fd5b503d6104b9565b84513d89823e3d90fd5b82606492519162461bcd60e51b835282015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152fd5b61052933610f9b565b338452600a60205281842055815460096020528184205561027e565b9050346101f25760603660031901126101f257610560610e6c565b6001600160a01b039060443590828216908183036104d4578390610582610e87565b1692807f00000000000000000000000000000000000000000000000000000000000000001684146106d1577f000000000000000000000000000000000000000000000000000000000000000016831461068e571561064b57835163a9059cbb60e01b81526001600160a01b039091169281019283526024356020848101919091529093929091849182908790829060400103925af19081156106425750610627575080f35b61063e9060203d811161044c5761043d8183610ff9565b5080f35b513d84823e3d90fd5b835162461bcd60e51b8152602081850152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b845162461bcd60e51b8152602081860152601c60248201527f43616e6e6f742077697468647261772072657761726420746f6b656e000000006044820152606490fd5b855162461bcd60e51b8152602081870152601d60248201527f43616e6e6f74207769746864726177207374616b696e6720746f6b656e0000006044820152606490fd5b5050346101675760203660031901126101675760209181906001600160a01b0361073c610e6c565b1681526008845220549051908152f35b919050346101f25760208060031936011261092e5782359160065442106108ed5760075442116108b55761077e610f16565b84554260035533610892575b82156108605761079c83600254610f09565b600255338552600882528085206107b4848254610f09565b905580516323b872dd60e01b81523394810194909452306024850152604484018390528184606481887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610453577f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9394610843575b50519283523392a280f35b61085990833d851161044c5761043d8183610ff9565b5038610838565b5162461bcd60e51b81529283015250600e60248201526d043616e6e6f74207374616b6520360941b6044820152606490fd5b61089b33610f9b565b338652600a8352818620558354600983528186205561078a565b5162461bcd60e51b81529283015250601460248201527314dd185ada5b99c81c195c9a5bd908195b99195960621b6044820152606490fd5b5162461bcd60e51b81529283015250601760248201527f5374616b696e67206e6f742073746172746564207965740000000000000000006044820152606490fd5b8380fd5b919050346101f25760203660031901126101f257813591610951610e87565b610959610f16565b81554260035582156109975750816020917f41d466ebd06fb97e7786086ac8b69b7eb7da798592036251291d34e9791cde019360015551908152a180f35b6020608492519162461bcd60e51b8352820152602260248201527f5265776172642072617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b5050346101675781600319360112610167576020906003549051908152f35b505034610167578160031936011261016757905490516001600160a01b039091168152602090f35b5050346101675760203660031901126101675760209181906001600160a01b03610a53610e6c565b1681526009845220549051908152f35b5050346101675781600319360112610167576020906002549051908152f35b5050346101675781600319360112610167576020906006549051908152f35b505034610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8334610b3f5780600319360112610b3f57610afe610e87565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b919050346101f25760203660031901126101f257813591610b61610e87565b42831115610bf157600654831115610ba55750816020917f37d37b8940cc1ec723111799f54132501e05042cd219649e575e84e5c36f3b5e9360075551908152a180f35b6020608492519162461bcd60e51b8352820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152fd5b6020606492519162461bcd60e51b8352820152601e60248201527f456e642074696d65206d75737420626520696e207468652066757475726500006044820152fd5b5050346101675781600319360112610167576020906001549051908152f35b5050346101675781600319360112610167576020906007549051908152f35b919050346101f2576020908160031936011261092e57823592610c92610f16565b81554260035533610deb575b8315610db65733855260088352838286205410610d7557908284809493610cca610d0d97600254610eb3565b60025533885260088352838820610ce2838254610eb3565b9055835163a9059cbb60e01b8152339181019182526020820192909252909586918291604090910190565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610453577f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d593946108435750519283523392a280f35b82606492519162461bcd60e51b8352820152601e60248201527f576974686472617720616d6f756e742065786365656473207374616b656400006044820152fd5b82606492519162461bcd60e51b83528201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152fd5b610df433610f9b565b338652600a84528286205580546009845282862055610c9e565b5050346101675760203660031901126101675760209181906001600160a01b03610e36610e6c565b168152600a845220549051908152f35b50503461016757602036600319011261016757602090610231610e67610e6c565b610f9b565b600435906001600160a01b0382168203610e8257565b600080fd5b6000546001600160a01b03163303610e9b57565b60405163118cdaa760e01b8152336004820152602490fd5b91908203918211610ec057565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610ec057565b8115610ef3570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610ec057565b60025480158015610f90575b610f8957600754804211600014610f82575b60035480821115610f7957610f7692610f6b610f62610f59610f709460045496610eb3565b60015490610ed6565b60055490610ed6565b610ee9565b90610f09565b90565b50505060045490565b5042610f34565b5060045490565b506006544210610f22565b610f769060018060a01b0316604060008281526008602052610fe9610fe083832054610fda610fc8610f16565b87865260096020528686205490610eb3565b90610ed6565b60055490610ee9565b928152600a602052205490610f09565b90601f8019910116810190811067ffffffffffffffff82111761101b57604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610e8257518015158103610e82579056fea26469706673582212209d6001e61e88a36cddb4175f27d23a7ed4fdf3ce6613d014aa622d1213a5400164736f6c63430008140033a2646970667358221220bdacfa30a05aef9a670a07144128d467a9e06c00ce7ee4fba2830a55d6b7f82064736f6c63430008140033",
              "opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0xBB JUMPI PUSH1 0x1F PUSH2 0x1ABC CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xC0 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xBB JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xBB JUMPI DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP4 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x19E5 SWAP1 DUP2 PUSH2 0xD7 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x68BCD8D EQ PUSH2 0x8A JUMPI POP DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x85AC165A EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8EEC5D70 EQ PUSH2 0x71 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST CALLVALUE PUSH2 0x114 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x114 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x1 SWAP1 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x7F NOT PUSH1 0xA0 ADD PUSH1 0x80 RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x84 MSTORE PUSH1 0xD PUSH1 0xA4 MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0xC4 MSTORE PUSH1 0x64 PUSH1 0x80 REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x172 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x114 JUMPI PUSH2 0x191 PUSH2 0x486 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x172 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x200 DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x20C DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x33B PUSH2 0x347 DUP3 PUSH1 0x84 CALLDATALOAD SWAP6 PUSH2 0x226 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP9 PUSH2 0x321 SWAP2 PUSH2 0x315 SWAP1 PUSH2 0x245 DUP13 ISZERO ISZERO PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x250 DUP11 DUP13 GT PUSH2 0x4FE JUMP JUMPDEST DUP5 AND SWAP10 DUP12 DUP12 PUSH2 0x2A0 DUP4 DUP14 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP5 PUSH1 0x20 DUP7 ADD SWAP7 DUP8 SWAP4 SWAP2 SWAP1 PUSH1 0x88 SWAP6 SWAP4 SWAP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 SWAP3 PUSH1 0x60 SHL AND DUP7 MSTORE PUSH1 0x60 SHL AND PUSH1 0x14 DUP6 ADD MSTORE PUSH1 0x28 DUP5 ADD MSTORE PUSH1 0x48 DUP4 ADD MSTORE PUSH1 0x68 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP7 PUSH2 0x2B4 PUSH1 0x1F NOT SWAP9 DUP10 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x56A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP10 PUSH2 0x1364 SWAP10 PUSH2 0x2C8 PUSH1 0x20 DUP13 ADD PUSH2 0x591 JUMP JUMPDEST SWAP11 DUP1 DUP13 MSTORE PUSH2 0x64C PUSH1 0x20 DUP14 ADD CODECOPY PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 CALLER PUSH1 0x20 DUP9 ADD SWAP3 SWAP2 PUSH1 0xA0 SWAP5 SWAP2 SWAP8 SWAP7 SWAP6 SWAP3 PUSH1 0xC0 DUP6 ADD SWAP9 PUSH1 0x1 DUP1 DUP9 SHL SUB SWAP3 DUP4 DUP1 SWAP3 AND DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP4 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0x335 PUSH1 0x20 DUP5 ADD DUP1 SWAP9 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 PUSH2 0x5A1 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x56A JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x0 CREATE2 SWAP1 DUP2 ISZERO PUSH2 0x172 JUMPI PUSH2 0x3AF SWAP3 PUSH2 0x360 DUP4 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0x9C5D829B9B23EFC461F9AEEF91979EC04BB903FEB3BEE4F26D22114ABFC7335B SWAP1 PUSH1 0x20 SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x417 DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x41F PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x49A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4B9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E6720746F6B656E2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x505 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x58C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST SWAP1 PUSH2 0x59F PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x56A JUMP JUMPDEST JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5B9 JUMPI POP POP ADD PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x58C JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x1 SSTORE DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0xC0 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH3 0x290 JUMPI PUSH1 0xC0 DUP2 PUSH3 0x1364 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x25 DUP3 DUP6 PUSH3 0x295 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x290 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH3 0x290 JUMPI PUSH1 0x20 SWAP2 PUSH3 0x57 DUP4 DUP3 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP1 PUSH3 0x65 DUP7 DUP3 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xA0 PUSH1 0x80 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP2 DUP8 ISZERO PUSH3 0x278 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP11 OR DUP3 SSTORE DUP11 MLOAD SWAP2 SWAP10 SWAP1 DUP9 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP12 DUP1 LOG3 DUP4 DUP6 LT ISZERO PUSH3 0x22B JUMPI POP PUSH1 0x80 MSTORE DUP4 PUSH1 0xA0 MSTORE PUSH1 0x1 SSTORE DUP2 PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH1 0x3 SSTORE AND DUP2 DUP2 ISZERO PUSH1 0x0 EQ PUSH3 0x1AD JUMPI POP POP PUSH1 0x12 SWAP1 JUMPDEST PUSH1 0x1E DUP3 LT ISZERO PUSH3 0x16A JUMPI POP PUSH1 0x1E SUB SWAP1 PUSH1 0x1E DUP3 GT PUSH3 0x156 JUMPI PUSH1 0x4D DUP3 GT PUSH3 0x156 JUMPI POP PUSH1 0xA EXP PUSH1 0x5 SSTORE MLOAD PUSH2 0x107F SWAP1 DUP2 PUSH3 0x2E5 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x587 ADD MSTORE DUP2 DUP2 PUSH2 0x7DF ADD MSTORE DUP2 DUP2 PUSH2 0xAB6 ADD MSTORE PUSH2 0xD12 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x138 ADD MSTORE DUP2 DUP2 PUSH2 0x2A2 ADD MSTORE PUSH2 0x5AF ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP5 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520696E666572696F7220746F20333000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH3 0x221 JUMPI DUP4 SWAP1 PUSH3 0x1DE JUMPI JUMPDEST PUSH1 0xFF SWAP2 POP AND SWAP1 PUSH3 0xEB JUMP JUMPDEST POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x219 JUMPI JUMPDEST PUSH3 0x1F7 DUP2 DUP4 PUSH3 0x295 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x215 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH3 0x215 JUMPI PUSH1 0xFF SWAP1 PUSH3 0x1D2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x1EB JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6D65 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x2B9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x290 JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x20 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x8CC262 EQ PUSH2 0xE46 JUMPI DUP2 PUSH4 0x660F1E8 EQ PUSH2 0xE0E JUMPI DUP2 PUSH4 0x2E1A7D4D EQ PUSH2 0xC71 JUMPI DUP2 PUSH4 0x3197CBB6 EQ PUSH2 0xC52 JUMPI DUP2 PUSH4 0x5D773B2C EQ PUSH2 0xC33 JUMPI DUP2 PUSH4 0x6AB3846B EQ PUSH2 0xB42 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0xAE5 JUMPI DUP2 PUSH4 0x72F702F3 EQ PUSH2 0xAA1 JUMPI DUP2 PUSH4 0x78E97925 EQ PUSH2 0xA82 JUMPI DUP2 PUSH4 0x817B1CD2 EQ PUSH2 0xA63 JUMPI DUP2 PUSH4 0x8B876347 EQ PUSH2 0xA2B JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xA03 JUMPI DUP2 PUSH4 0x9231CF74 EQ PUSH2 0x9E4 JUMPI DUP2 PUSH4 0x9EF3A261 EQ PUSH2 0x932 JUMPI DUP2 PUSH4 0xA694FC3A EQ PUSH2 0x74C JUMPI DUP2 PUSH4 0xACC3A939 EQ PUSH2 0x714 JUMPI DUP2 PUSH4 0xB51609B4 EQ PUSH2 0x545 JUMPI DUP2 PUSH4 0xB88A802F EQ PUSH2 0x257 JUMPI DUP2 PUSH4 0xCCD34CD5 EQ PUSH2 0x238 JUMPI DUP2 PUSH4 0xCD3DAF9D EQ PUSH2 0x214 JUMPI DUP2 PUSH4 0xDF136D65 EQ PUSH2 0x1F6 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x16B JUMPI POP PUSH4 0xF7C618C1 SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x186 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH2 0x18F PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x1DC JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F2 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x231 PUSH2 0xF16 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x272 PUSH2 0xF16 JUMP JUMPDEST DUP3 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0x520 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP3 DUP4 ISZERO PUSH2 0x4E9 JUMPI CALLER DUP6 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP6 SWAP1 SSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x390 JUMPI POP DUP5 DUP1 DUP1 DUP1 DUP8 CALLER GAS CALL RETURNDATASIZE ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x378 JUMPI DUP4 MLOAD SWAP1 PUSH2 0x304 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP8 ADD DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP6 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x341 JUMPI POP SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP2 JUMPDEST MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH2 0x30D JUMP JUMPDEST SWAP1 DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP3 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4DF JUMPI SWAP1 DUP7 SWAP2 DUP9 SWAP2 PUSH2 0x4AA JUMPI JUMPDEST POP LT PUSH2 0x45D JUMPI DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE SWAP5 SWAP4 SWAP3 SWAP2 DUP4 SWAP2 DUP7 SWAP2 SWAP1 DUP3 SWAP1 DUP10 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP4 SWAP5 PUSH2 0x426 JUMPI JUMPDEST POP PUSH2 0x337 JUMP JUMPDEST PUSH2 0x445 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x44C JUMPI JUMPDEST PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1031 JUMP JUMPDEST POP CODESIZE PUSH2 0x420 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x433 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742072657761726420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x4D8 JUMPI JUMPDEST PUSH2 0x4C3 DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4D4 JUMPI DUP6 SWAP1 MLOAD CODESIZE PUSH2 0x3BB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4B9 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x529 CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SSTORE DUP2 SLOAD PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SSTORE PUSH2 0x27E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x560 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP3 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x4D4 JUMPI DUP4 SWAP1 PUSH2 0x582 PUSH2 0xE87 JUMP JUMPDEST AND SWAP3 DUP1 PUSH32 0x0 AND DUP5 EQ PUSH2 0x6D1 JUMPI PUSH32 0x0 AND DUP4 EQ PUSH2 0x68E JUMPI ISZERO PUSH2 0x64B JUMPI DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x642 JUMPI POP PUSH2 0x627 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x63E SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772072657761726420746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177207374616B696E6720746F6B656E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x73C PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x92E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x8ED JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x8B5 JUMPI PUSH2 0x77E PUSH2 0xF16 JUMP JUMPDEST DUP5 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0x892 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x860 JUMPI PUSH2 0x79C DUP4 PUSH1 0x2 SLOAD PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP6 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP6 KECCAK256 PUSH2 0x7B4 DUP5 DUP3 SLOAD PUSH2 0xF09 JUMP JUMPDEST SWAP1 SSTORE DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP4 SWAP1 MSTORE DUP2 DUP5 PUSH1 0x64 DUP2 DUP9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP4 SWAP5 PUSH2 0x843 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x859 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x44C JUMPI PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP CODESIZE PUSH2 0x838 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x89B CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP7 KECCAK256 SSTORE DUP4 SLOAD PUSH1 0x9 DUP4 MSTORE DUP2 DUP7 KECCAK256 SSTORE PUSH2 0x78A JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD185ADA5B99C81C195C9A5BD908195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67206E6F74207374617274656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x951 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x959 PUSH2 0xF16 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x3 SSTORE DUP3 ISZERO PUSH2 0x997 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x41D466EBD06FB97E7786086AC8B69B7EB7DA798592036251291D34E9791CDE01 SWAP4 PUSH1 0x1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA53 PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0xB3F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB3F JUMPI PUSH2 0xAFE PUSH2 0xE87 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB61 PUSH2 0xE87 JUMP JUMPDEST TIMESTAMP DUP4 GT ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x6 SLOAD DUP4 GT ISZERO PUSH2 0xBA5 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x37D37B8940CC1EC723111799F54132501E05042CD219649E575E84E5C36F3B5E SWAP4 PUSH1 0x7 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x92E JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0xC92 PUSH2 0xF16 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0xDEB JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xDB6 JUMPI CALLER DUP6 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 DUP3 DUP7 KECCAK256 SLOAD LT PUSH2 0xD75 JUMPI SWAP1 DUP3 DUP5 DUP1 SWAP5 SWAP4 PUSH2 0xCCA PUSH2 0xD0D SWAP8 PUSH1 0x2 SLOAD PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP9 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 DUP9 KECCAK256 PUSH2 0xCE2 DUP4 DUP3 SLOAD PUSH2 0xEB3 JUMP JUMPDEST SWAP1 SSTORE DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP6 DUP7 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP4 SWAP5 PUSH2 0x843 JUMPI POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E742065786365656473207374616B65640000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDF4 CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xA DUP5 MSTORE DUP3 DUP7 KECCAK256 SSTORE DUP1 SLOAD PUSH1 0x9 DUP5 MSTORE DUP3 DUP7 KECCAK256 SSTORE PUSH2 0xC9E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE36 PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x231 PUSH2 0xE67 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE82 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE9B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xEC0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xEC0 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEF3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEC0 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0xF90 JUMPI JUMPDEST PUSH2 0xF89 JUMPI PUSH1 0x7 SLOAD DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0xF82 JUMPI JUMPDEST PUSH1 0x3 SLOAD DUP1 DUP3 GT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF76 SWAP3 PUSH2 0xF6B PUSH2 0xF62 PUSH2 0xF59 PUSH2 0xF70 SWAP5 PUSH1 0x4 SLOAD SWAP7 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0xEE9 JUMP JUMPDEST SWAP1 PUSH2 0xF09 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP TIMESTAMP PUSH2 0xF34 JUMP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0xF22 JUMP JUMPDEST PUSH2 0xF76 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0xFE9 PUSH2 0xFE0 DUP4 DUP4 KECCAK256 SLOAD PUSH2 0xFDA PUSH2 0xFC8 PUSH2 0xF16 JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP7 DUP7 KECCAK256 SLOAD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xEE9 JUMP JUMPDEST SWAP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0xF09 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x101B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE82 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xE82 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH1 0x1 0xE6 0x1E DUP9 LOG3 PUSH13 0xDDB4175F27D23A7ED4FDF3CE66 SGT 0xD0 EQ 0xAA PUSH3 0x2D1213 0xA5 BLOCKHASH ADD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xAC STATICCALL ADDRESS LOG0 GAS 0xEF SWAP11 PUSH8 0xA07144128D467A9 0xE0 PUSH13 0xCE7EE4FBA2830A55D6B7F820 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "145:2317:5:-:0;;;;;;;;;;;;;-1:-1:-1;;145:2317:5;;;;-1:-1:-1;;;;;145:2317:5;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;145:2317:5;;;;;;;;;;1273:26:0;;1269:95;;-1:-1:-1;145:2317:5;;-1:-1:-1;;;;;;145:2317:5;;;;;;;;;;;3052:40:0;;-1:-1:-1;3052:40:0;145:2317:5;;;;;;;1269:95:0;145:2317:5;;-1:-1:-1;;;1322:31:0;;-1:-1:-1;1322:31:0;;;145:2317:5;;;1322:31:0;145:2317:5;-1:-1:-1;145:2317:5;;;;;;-1:-1:-1;145:2317:5;;;;;-1:-1:-1;145:2317:5"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address_3155": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_address_contract_IERC20_contract_IERC20_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 7,
                  "returnSlots": 1
                },
                "abi_encode_bytes": {
                  "entryPoint": 1441,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_packed_address_address_uint256_uint256_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 6,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 1425,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_push_from_address_to_array_address_dyn_storage_ptr": {
                  "entryPoint": 1484,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "external_fun_allPools": {
                  "entryPoint": 279,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_createPool": {
                  "entryPoint": 483,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_getPoolCount": {
                  "entryPoint": 988,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 947,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 375,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 1018,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "finalize_allocation": {
                  "entryPoint": 1386,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 1158,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1364,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_74a5": {
                  "entryPoint": 1202,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_stringliteral_d482": {
                  "entryPoint": 1278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_contract_IERC20": {
                  "entryPoint": 466,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b6000803560e01c908163068bcd8d1461008a5750806341d1de9714610085578063715018a61461008057806385ac165a1461007b5780638da5cb5b146100765780638eec5d70146100715763f2fde38b1461006c57600080fd5b6103fa565b6103dc565b6103b3565b6101e3565b610177565b610117565b3461011457602036600319011261011457600435906001548210156100e657600190527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601546001600160a01b0316608052607f1960a0016080f35b62461bcd60e51b6080526020608452600d60a4526c092dcecc2d8d2c840d2dcc8caf609b1b60c45260646080fd5b80fd5b34610172576020366003190112610172576004356001548110156101725760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601546040516001600160a01b039091168152602090f35b600080fd5b346101725760008060031936011261011457610191610486565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b6001600160a01b0381160361017257565b346101725760a036600319011261017257600435610200816101d2565b60243561020c816101d2565b6044356064359061033b6103478260843595610226610486565b6001600160a01b038881169861032191610315906102458c15156104b2565b6102508a8c116104fe565b8416998b8b6102a0838d6040519a8b9460208601968793919060889593916bffffffffffffffffffffffff19809260601b16865260601b1660148501526028840152604883015260688201520190565b03966102b4601f199889810183528261056a565b51902099611364996102c860208c01610591565b9a808c5261064c60208d01396040519687953360208801929160a094919796959260c0850198600180881b0392838092168752166020860152166040840152606083015260808201520152565b0383810183528261056a565b6040519384916103356020840180986105a1565b906105a1565b0390810183528261056a565b51906000f5908115610172576103af92610360836105cc565b6040516001600160a01b03841681527f9c5d829b9b23efc461f9aeef91979ec04bb903feb3bee4f26d22114abfc7335b90602090a36040516001600160a01b0390911681529081906020820190565b0390f35b34610172576000366003190112610172576000546040516001600160a01b039091168152602090f35b34610172576000366003190112610172576020600154604051908152f35b3461017257602036600319011261017257600435610417816101d2565b61041f610486565b6001600160a01b03908116801561046d57600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b604051631e4fbdf760e01b815260006004820152602490fd5b6000546001600160a01b0316330361049a57565b60405163118cdaa760e01b8152336004820152602490fd5b156104b957565b60405162461bcd60e51b815260206004820152601d60248201527f496e76616c6964207374616b696e6720746f6b656e20616464726573730000006044820152606490fd5b1561050557565b60405162461bcd60e51b815260206004820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152608490fd5b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761058c57604052565b610554565b9061059f604051928361056a565b565b9081519160005b8381106105b9575050016000815290565b80602080928401015181850152016105a8565b6001546801000000000000000081101561058c5760018101806001558110156106355760016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03909216919091179055565b634e487b7160e01b600052603260045260246000fdfe60c060409080825234620002905760c08162001364803803809162000025828562000295565b833981010312620002905780516001600160a01b038082169291839003620002905760209162000057838201620002cf565b9062000065868201620002cf565b91606082015160a060808401519301519187156200027857600080546001600160a01b031981168a1782558a5191999088167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08b80a3838510156200022b57506080528360a0526001558160065560075560035516818115600014620001ad5750506012905b601e8210156200016a5750601e0390601e82116200015657604d8211620001565750600a0a6005555161107f9081620002e58239608051818181610587015281816107df01528181610ab60152610d12015260a051818181610138015281816102a201526105af0152f35b634e487b7160e01b81526011600452602490fd5b60649084519062461bcd60e51b82526004820152601660248201527f4d75737420626520696e666572696f7220746f203330000000000000000000006044820152fd5b845163313ce56760e01b815291829060049082905afa801562000221578390620001de575b60ff91501690620000eb565b508181813d831162000219575b620001f7818362000295565b8101031262000215575160ff81168103620002155760ff90620001d2565b8280fd5b503d620001eb565b84513d85823e3d90fd5b62461bcd60e51b815260048101889052602260248201527f53746172742074696d65206d757374206265206265666f726520656e642074696044820152616d6560f01b6064820152608490fd5b8851631e4fbdf760e01b815260006004820152602490fd5b600080fd5b601f909101601f19168101906001600160401b03821190821017620002b957604052565b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620002905756fe60406080815260049081361015610020575b5050361561001e57600080fd5b005b600091823560e01c9081628cc26214610e465781630660f1e814610e0e5781632e1a7d4d14610c715781633197cbb614610c525781635d773b2c14610c335781636ab3846b14610b42578163715018a614610ae557816372f702f314610aa157816378e9792514610a82578163817b1cd214610a635781638b87634714610a2b5781638da5cb5b14610a035781639231cf74146109e45781639ef3a26114610932578163a694fc3a1461074c578163acc3a93914610714578163b51609b414610545578163b88a802f14610257578163ccd34cd514610238578163cd3daf9d14610214578163df136d65146101f6578163f2fde38b1461016b575063f7c618c1036100115734610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5080fd5b9050346101f25760203660031901126101f257610186610e6c565b9061018f610e87565b6001600160a01b039182169283156101dc57505082546001600160a01b0319811683178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9050346101f257826003193601126101f25760209250549051908152f35b505034610167578160031936011261016757602090610231610f16565b9051908152f35b5050346101675781600319360112610167576020906005549051908152f35b919050346101f257826003193601126101f257610272610f16565b82554260035533610520575b338352602090600a8252808420549283156104e957338552600a83528185208590557f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168061039057508480808087335af13d1561038b573d67ffffffffffffffff811161037857835190610304601f8201601f1916870183610ff9565b815286853d92013e5b156103415750907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241915b519283523392a280f35b82606492519162461bcd60e51b83528201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152fd5b634e487b7160e01b875260418352602487fd5b61030d565b9082516370a0823160e01b815230828201528481602481865afa9081156104df5790869188916104aa575b501061045d57825163a9059cbb60e01b8152339181019182526020820186905294939291839186919082908990829060400103925af1938415610453577f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419394610426575b50610337565b61044590833d851161044c575b61043d8183610ff9565b810190611031565b5038610420565b503d610433565b81513d87823e3d90fd5b825162461bcd60e51b8152908101849052602160248201527f496e73756666696369656e742072657761726420746f6b656e2062616c616e636044820152606560f81b6064820152608490fd5b809250868092503d83116104d8575b6104c38183610ff9565b810103126104d457859051386103bb565b8680fd5b503d6104b9565b84513d89823e3d90fd5b82606492519162461bcd60e51b835282015260136024820152724e6f207265776172647320746f20636c61696d60681b6044820152fd5b61052933610f9b565b338452600a60205281842055815460096020528184205561027e565b9050346101f25760603660031901126101f257610560610e6c565b6001600160a01b039060443590828216908183036104d4578390610582610e87565b1692807f00000000000000000000000000000000000000000000000000000000000000001684146106d1577f000000000000000000000000000000000000000000000000000000000000000016831461068e571561064b57835163a9059cbb60e01b81526001600160a01b039091169281019283526024356020848101919091529093929091849182908790829060400103925af19081156106425750610627575080f35b61063e9060203d811161044c5761043d8183610ff9565b5080f35b513d84823e3d90fd5b835162461bcd60e51b8152602081850152601960248201527f496e76616c696420726563697069656e742061646472657373000000000000006044820152606490fd5b845162461bcd60e51b8152602081860152601c60248201527f43616e6e6f742077697468647261772072657761726420746f6b656e000000006044820152606490fd5b855162461bcd60e51b8152602081870152601d60248201527f43616e6e6f74207769746864726177207374616b696e6720746f6b656e0000006044820152606490fd5b5050346101675760203660031901126101675760209181906001600160a01b0361073c610e6c565b1681526008845220549051908152f35b919050346101f25760208060031936011261092e5782359160065442106108ed5760075442116108b55761077e610f16565b84554260035533610892575b82156108605761079c83600254610f09565b600255338552600882528085206107b4848254610f09565b905580516323b872dd60e01b81523394810194909452306024850152604484018390528184606481887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610453577f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d9394610843575b50519283523392a280f35b61085990833d851161044c5761043d8183610ff9565b5038610838565b5162461bcd60e51b81529283015250600e60248201526d043616e6e6f74207374616b6520360941b6044820152606490fd5b61089b33610f9b565b338652600a8352818620558354600983528186205561078a565b5162461bcd60e51b81529283015250601460248201527314dd185ada5b99c81c195c9a5bd908195b99195960621b6044820152606490fd5b5162461bcd60e51b81529283015250601760248201527f5374616b696e67206e6f742073746172746564207965740000000000000000006044820152606490fd5b8380fd5b919050346101f25760203660031901126101f257813591610951610e87565b610959610f16565b81554260035582156109975750816020917f41d466ebd06fb97e7786086ac8b69b7eb7da798592036251291d34e9791cde019360015551908152a180f35b6020608492519162461bcd60e51b8352820152602260248201527f5265776172642072617465206d7573742062652067726561746572207468616e604482015261020360f41b6064820152fd5b5050346101675781600319360112610167576020906003549051908152f35b505034610167578160031936011261016757905490516001600160a01b039091168152602090f35b5050346101675760203660031901126101675760209181906001600160a01b03610a53610e6c565b1681526009845220549051908152f35b5050346101675781600319360112610167576020906002549051908152f35b5050346101675781600319360112610167576020906006549051908152f35b505034610167578160031936011261016757517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b8334610b3f5780600319360112610b3f57610afe610e87565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b919050346101f25760203660031901126101f257813591610b61610e87565b42831115610bf157600654831115610ba55750816020917f37d37b8940cc1ec723111799f54132501e05042cd219649e575e84e5c36f3b5e9360075551908152a180f35b6020608492519162461bcd60e51b8352820152602160248201527f456e642074696d65206d7573742062652061667465722073746172742074696d6044820152606560f81b6064820152fd5b6020606492519162461bcd60e51b8352820152601e60248201527f456e642074696d65206d75737420626520696e207468652066757475726500006044820152fd5b5050346101675781600319360112610167576020906001549051908152f35b5050346101675781600319360112610167576020906007549051908152f35b919050346101f2576020908160031936011261092e57823592610c92610f16565b81554260035533610deb575b8315610db65733855260088352838286205410610d7557908284809493610cca610d0d97600254610eb3565b60025533885260088352838820610ce2838254610eb3565b9055835163a9059cbb60e01b8152339181019182526020820192909252909586918291604090910190565b0381887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610453577f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d593946108435750519283523392a280f35b82606492519162461bcd60e51b8352820152601e60248201527f576974686472617720616d6f756e742065786365656473207374616b656400006044820152fd5b82606492519162461bcd60e51b83528201526011602482015270043616e6e6f74207769746864726177203607c1b6044820152fd5b610df433610f9b565b338652600a84528286205580546009845282862055610c9e565b5050346101675760203660031901126101675760209181906001600160a01b03610e36610e6c565b168152600a845220549051908152f35b50503461016757602036600319011261016757602090610231610e67610e6c565b610f9b565b600435906001600160a01b0382168203610e8257565b600080fd5b6000546001600160a01b03163303610e9b57565b60405163118cdaa760e01b8152336004820152602490fd5b91908203918211610ec057565b634e487b7160e01b600052601160045260246000fd5b81810292918115918404141715610ec057565b8115610ef3570490565b634e487b7160e01b600052601260045260246000fd5b91908201809211610ec057565b60025480158015610f90575b610f8957600754804211600014610f82575b60035480821115610f7957610f7692610f6b610f62610f59610f709460045496610eb3565b60015490610ed6565b60055490610ed6565b610ee9565b90610f09565b90565b50505060045490565b5042610f34565b5060045490565b506006544210610f22565b610f769060018060a01b0316604060008281526008602052610fe9610fe083832054610fda610fc8610f16565b87865260096020528686205490610eb3565b90610ed6565b60055490610ee9565b928152600a602052205490610f09565b90601f8019910116810190811067ffffffffffffffff82111761101b57604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610e8257518015158103610e82579056fea26469706673582212209d6001e61e88a36cddb4175f27d23a7ed4fdf3ce6613d014aa622d1213a5400164736f6c63430008140033a2646970667358221220bdacfa30a05aef9a670a07144128d467a9e06c00ce7ee4fba2830a55d6b7f82064736f6c63430008140033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x68BCD8D EQ PUSH2 0x8A JUMPI POP DUP1 PUSH4 0x41D1DE97 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x85AC165A EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x8EEC5D70 EQ PUSH2 0x71 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FA JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x1E3 JUMP JUMPDEST PUSH2 0x177 JUMP JUMPDEST PUSH2 0x117 JUMP JUMPDEST CALLVALUE PUSH2 0x114 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x114 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 SLOAD DUP3 LT ISZERO PUSH2 0xE6 JUMPI PUSH1 0x1 SWAP1 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x80 MSTORE PUSH1 0x7F NOT PUSH1 0xA0 ADD PUSH1 0x80 RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL PUSH1 0x80 MSTORE PUSH1 0x20 PUSH1 0x84 MSTORE PUSH1 0xD PUSH1 0xA4 MSTORE PUSH13 0x92DCECC2D8D2C840D2DCC8CAF PUSH1 0x9B SHL PUSH1 0xC4 MSTORE PUSH1 0x64 PUSH1 0x80 REVERT JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0x172 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x114 JUMPI PUSH2 0x191 PUSH2 0x486 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x172 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x200 DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x20C DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP1 PUSH2 0x33B PUSH2 0x347 DUP3 PUSH1 0x84 CALLDATALOAD SWAP6 PUSH2 0x226 PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP9 PUSH2 0x321 SWAP2 PUSH2 0x315 SWAP1 PUSH2 0x245 DUP13 ISZERO ISZERO PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x250 DUP11 DUP13 GT PUSH2 0x4FE JUMP JUMPDEST DUP5 AND SWAP10 DUP12 DUP12 PUSH2 0x2A0 DUP4 DUP14 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP5 PUSH1 0x20 DUP7 ADD SWAP7 DUP8 SWAP4 SWAP2 SWAP1 PUSH1 0x88 SWAP6 SWAP4 SWAP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT DUP1 SWAP3 PUSH1 0x60 SHL AND DUP7 MSTORE PUSH1 0x60 SHL AND PUSH1 0x14 DUP6 ADD MSTORE PUSH1 0x28 DUP5 ADD MSTORE PUSH1 0x48 DUP4 ADD MSTORE PUSH1 0x68 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SUB SWAP7 PUSH2 0x2B4 PUSH1 0x1F NOT SWAP9 DUP10 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x56A JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP10 PUSH2 0x1364 SWAP10 PUSH2 0x2C8 PUSH1 0x20 DUP13 ADD PUSH2 0x591 JUMP JUMPDEST SWAP11 DUP1 DUP13 MSTORE PUSH2 0x64C PUSH1 0x20 DUP14 ADD CODECOPY PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 CALLER PUSH1 0x20 DUP9 ADD SWAP3 SWAP2 PUSH1 0xA0 SWAP5 SWAP2 SWAP8 SWAP7 SWAP6 SWAP3 PUSH1 0xC0 DUP6 ADD SWAP9 PUSH1 0x1 DUP1 DUP9 SHL SUB SWAP3 DUP4 DUP1 SWAP3 AND DUP8 MSTORE AND PUSH1 0x20 DUP7 ADD MSTORE AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB DUP4 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP2 PUSH2 0x335 PUSH1 0x20 DUP5 ADD DUP1 SWAP9 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 PUSH2 0x5A1 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x56A JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x0 CREATE2 SWAP1 DUP2 ISZERO PUSH2 0x172 JUMPI PUSH2 0x3AF SWAP3 PUSH2 0x360 DUP4 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH32 0x9C5D829B9B23EFC461F9AEEF91979EC04BB903FEB3BEE4F26D22114ABFC7335B SWAP1 PUSH1 0x20 SWAP1 LOG3 PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x172 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x172 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x417 DUP2 PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x41F PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x49A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x4B9 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207374616B696E6720746F6B656E2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x505 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x58C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x554 JUMP JUMPDEST SWAP1 PUSH2 0x59F PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x56A JUMP JUMPDEST JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5B9 JUMPI POP POP ADD PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP2 DUP6 ADD MSTORE ADD PUSH2 0x5A8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x58C JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x1 SSTORE DUP2 LT ISZERO PUSH2 0x635 JUMPI PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0xC0 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE CALLVALUE PUSH3 0x290 JUMPI PUSH1 0xC0 DUP2 PUSH3 0x1364 DUP1 CODESIZE SUB DUP1 SWAP2 PUSH3 0x25 DUP3 DUP6 PUSH3 0x295 JUMP JUMPDEST DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x290 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP3 SWAP2 DUP4 SWAP1 SUB PUSH3 0x290 JUMPI PUSH1 0x20 SWAP2 PUSH3 0x57 DUP4 DUP3 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP1 PUSH3 0x65 DUP7 DUP3 ADD PUSH3 0x2CF JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0xA0 PUSH1 0x80 DUP5 ADD MLOAD SWAP4 ADD MLOAD SWAP2 DUP8 ISZERO PUSH3 0x278 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP11 OR DUP3 SSTORE DUP11 MLOAD SWAP2 SWAP10 SWAP1 DUP9 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP12 DUP1 LOG3 DUP4 DUP6 LT ISZERO PUSH3 0x22B JUMPI POP PUSH1 0x80 MSTORE DUP4 PUSH1 0xA0 MSTORE PUSH1 0x1 SSTORE DUP2 PUSH1 0x6 SSTORE PUSH1 0x7 SSTORE PUSH1 0x3 SSTORE AND DUP2 DUP2 ISZERO PUSH1 0x0 EQ PUSH3 0x1AD JUMPI POP POP PUSH1 0x12 SWAP1 JUMPDEST PUSH1 0x1E DUP3 LT ISZERO PUSH3 0x16A JUMPI POP PUSH1 0x1E SUB SWAP1 PUSH1 0x1E DUP3 GT PUSH3 0x156 JUMPI PUSH1 0x4D DUP3 GT PUSH3 0x156 JUMPI POP PUSH1 0xA EXP PUSH1 0x5 SSTORE MLOAD PUSH2 0x107F SWAP1 DUP2 PUSH3 0x2E5 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x587 ADD MSTORE DUP2 DUP2 PUSH2 0x7DF ADD MSTORE DUP2 DUP2 PUSH2 0xAB6 ADD MSTORE PUSH2 0xD12 ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x138 ADD MSTORE DUP2 DUP2 PUSH2 0x2A2 ADD MSTORE PUSH2 0x5AF ADD MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP1 DUP5 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D75737420626520696E666572696F7220746F20333000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 GAS STATICCALL DUP1 ISZERO PUSH3 0x221 JUMPI DUP4 SWAP1 PUSH3 0x1DE JUMPI JUMPDEST PUSH1 0xFF SWAP2 POP AND SWAP1 PUSH3 0xEB JUMP JUMPDEST POP DUP2 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH3 0x219 JUMPI JUMPDEST PUSH3 0x1F7 DUP2 DUP4 PUSH3 0x295 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH3 0x215 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH3 0x215 JUMPI PUSH1 0xFF SWAP1 PUSH3 0x1D2 JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH3 0x1EB JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D65206D757374206265206265666F726520656E64207469 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6D65 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP9 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH3 0x2B9 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0x290 JUMPI JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x20 JUMPI JUMPDEST POP POP CALLDATASIZE ISZERO PUSH2 0x1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0x8CC262 EQ PUSH2 0xE46 JUMPI DUP2 PUSH4 0x660F1E8 EQ PUSH2 0xE0E JUMPI DUP2 PUSH4 0x2E1A7D4D EQ PUSH2 0xC71 JUMPI DUP2 PUSH4 0x3197CBB6 EQ PUSH2 0xC52 JUMPI DUP2 PUSH4 0x5D773B2C EQ PUSH2 0xC33 JUMPI DUP2 PUSH4 0x6AB3846B EQ PUSH2 0xB42 JUMPI DUP2 PUSH4 0x715018A6 EQ PUSH2 0xAE5 JUMPI DUP2 PUSH4 0x72F702F3 EQ PUSH2 0xAA1 JUMPI DUP2 PUSH4 0x78E97925 EQ PUSH2 0xA82 JUMPI DUP2 PUSH4 0x817B1CD2 EQ PUSH2 0xA63 JUMPI DUP2 PUSH4 0x8B876347 EQ PUSH2 0xA2B JUMPI DUP2 PUSH4 0x8DA5CB5B EQ PUSH2 0xA03 JUMPI DUP2 PUSH4 0x9231CF74 EQ PUSH2 0x9E4 JUMPI DUP2 PUSH4 0x9EF3A261 EQ PUSH2 0x932 JUMPI DUP2 PUSH4 0xA694FC3A EQ PUSH2 0x74C JUMPI DUP2 PUSH4 0xACC3A939 EQ PUSH2 0x714 JUMPI DUP2 PUSH4 0xB51609B4 EQ PUSH2 0x545 JUMPI DUP2 PUSH4 0xB88A802F EQ PUSH2 0x257 JUMPI DUP2 PUSH4 0xCCD34CD5 EQ PUSH2 0x238 JUMPI DUP2 PUSH4 0xCD3DAF9D EQ PUSH2 0x214 JUMPI DUP2 PUSH4 0xDF136D65 EQ PUSH2 0x1F6 JUMPI DUP2 PUSH4 0xF2FDE38B EQ PUSH2 0x16B JUMPI POP PUSH4 0xF7C618C1 SUB PUSH2 0x11 JUMPI CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x186 PUSH2 0xE6C JUMP JUMPDEST SWAP1 PUSH2 0x18F PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x1DC JUMPI POP POP DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F2 JUMPI PUSH1 0x20 SWAP3 POP SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x231 PUSH2 0xF16 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI DUP3 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x272 PUSH2 0xF16 JUMP JUMPDEST DUP3 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0x520 JUMPI JUMPDEST CALLER DUP4 MSTORE PUSH1 0x20 SWAP1 PUSH1 0xA DUP3 MSTORE DUP1 DUP5 KECCAK256 SLOAD SWAP3 DUP4 ISZERO PUSH2 0x4E9 JUMPI CALLER DUP6 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP6 SWAP1 SSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x390 JUMPI POP DUP5 DUP1 DUP1 DUP1 DUP8 CALLER GAS CALL RETURNDATASIZE ISZERO PUSH2 0x38B JUMPI RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x378 JUMPI DUP4 MLOAD SWAP1 PUSH2 0x304 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP8 ADD DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 MSTORE DUP7 DUP6 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x341 JUMPI POP SWAP1 PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP2 JUMPDEST MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x115512081D1C985B9CD9995C8819985A5B1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x41 DUP4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST PUSH2 0x30D JUMP JUMPDEST SWAP1 DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS DUP3 DUP3 ADD MSTORE DUP5 DUP2 PUSH1 0x24 DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4DF JUMPI SWAP1 DUP7 SWAP2 DUP9 SWAP2 PUSH2 0x4AA JUMPI JUMPDEST POP LT PUSH2 0x45D JUMPI DUP3 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE SWAP5 SWAP4 SWAP3 SWAP2 DUP4 SWAP2 DUP7 SWAP2 SWAP1 DUP3 SWAP1 DUP10 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 SWAP4 SWAP5 PUSH2 0x426 JUMPI JUMPDEST POP PUSH2 0x337 JUMP JUMPDEST PUSH2 0x445 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x44C JUMPI JUMPDEST PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1031 JUMP JUMPDEST POP CODESIZE PUSH2 0x420 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x433 JUMP JUMPDEST DUP2 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742072657761726420746F6B656E2062616C616E63 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP1 SWAP3 POP DUP7 DUP1 SWAP3 POP RETURNDATASIZE DUP4 GT PUSH2 0x4D8 JUMPI JUMPDEST PUSH2 0x4C3 DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4D4 JUMPI DUP6 SWAP1 MLOAD CODESIZE PUSH2 0x3BB JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x4B9 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F207265776172647320746F20636C61696D PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x529 CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP5 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SSTORE DUP2 SLOAD PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 DUP5 KECCAK256 SSTORE PUSH2 0x27E JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI PUSH2 0x560 PUSH2 0xE6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP3 DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x4D4 JUMPI DUP4 SWAP1 PUSH2 0x582 PUSH2 0xE87 JUMP JUMPDEST AND SWAP3 DUP1 PUSH32 0x0 AND DUP5 EQ PUSH2 0x6D1 JUMPI PUSH32 0x0 AND DUP4 EQ PUSH2 0x68E JUMPI ISZERO PUSH2 0x64B JUMPI DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 SWAP3 SWAP1 SWAP2 DUP5 SWAP2 DUP3 SWAP1 DUP8 SWAP1 DUP3 SWAP1 PUSH1 0x40 ADD SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x642 JUMPI POP PUSH2 0x627 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x63E SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x44C JUMPI PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP6 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP5 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP7 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F742077697468647261772072657761726420746F6B656E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP6 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 DUP2 DUP8 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207769746864726177207374616B696E6720746F6B656E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x73C PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x92E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x8ED JUMPI PUSH1 0x7 SLOAD TIMESTAMP GT PUSH2 0x8B5 JUMPI PUSH2 0x77E PUSH2 0xF16 JUMP JUMPDEST DUP5 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0x892 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x860 JUMPI PUSH2 0x79C DUP4 PUSH1 0x2 SLOAD PUSH2 0xF09 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP6 MSTORE PUSH1 0x8 DUP3 MSTORE DUP1 DUP6 KECCAK256 PUSH2 0x7B4 DUP5 DUP3 SLOAD PUSH2 0xF09 JUMP JUMPDEST SWAP1 SSTORE DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD DUP4 SWAP1 MSTORE DUP2 DUP5 PUSH1 0x64 DUP2 DUP9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP4 SWAP5 PUSH2 0x843 JUMPI JUMPDEST POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x859 SWAP1 DUP4 RETURNDATASIZE DUP6 GT PUSH2 0x44C JUMPI PUSH2 0x43D DUP2 DUP4 PUSH2 0xFF9 JUMP JUMPDEST POP CODESIZE PUSH2 0x838 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x89B CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xA DUP4 MSTORE DUP2 DUP7 KECCAK256 SSTORE DUP4 SLOAD PUSH1 0x9 DUP4 MSTORE DUP2 DUP7 KECCAK256 SSTORE PUSH2 0x78A JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14DD185ADA5B99C81C195C9A5BD908195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP3 DUP4 ADD MSTORE POP PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E67206E6F74207374617274656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0x951 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x959 PUSH2 0xF16 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x3 SSTORE DUP3 ISZERO PUSH2 0x997 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x41D466EBD06FB97E7786086AC8B69B7EB7DA798592036251291D34E9791CDE01 SWAP4 PUSH1 0x1 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265776172642072617465206D7573742062652067726561746572207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x203 PUSH1 0xF4 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x3 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI SWAP1 SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA53 PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x9 DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x2 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0xB3F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0xB3F JUMPI PUSH2 0xAFE PUSH2 0xE87 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH2 0xB61 PUSH2 0xE87 JUMP JUMPDEST TIMESTAMP DUP4 GT ISZERO PUSH2 0xBF1 JUMPI PUSH1 0x6 SLOAD DUP4 GT ISZERO PUSH2 0xBA5 JUMPI POP DUP2 PUSH1 0x20 SWAP2 PUSH32 0x37D37B8940CC1EC723111799F54132501E05042CD219649E575E84E5C36F3B5E SWAP4 PUSH1 0x7 SSTORE MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x20 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D75737420626520696E20746865206675747572650000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x1 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x7 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 POP CALLVALUE PUSH2 0x1F2 JUMPI PUSH1 0x20 SWAP1 DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x92E JUMPI DUP3 CALLDATALOAD SWAP3 PUSH2 0xC92 PUSH2 0xF16 JUMP JUMPDEST DUP2 SSTORE TIMESTAMP PUSH1 0x3 SSTORE CALLER PUSH2 0xDEB JUMPI JUMPDEST DUP4 ISZERO PUSH2 0xDB6 JUMPI CALLER DUP6 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 DUP3 DUP7 KECCAK256 SLOAD LT PUSH2 0xD75 JUMPI SWAP1 DUP3 DUP5 DUP1 SWAP5 SWAP4 PUSH2 0xCCA PUSH2 0xD0D SWAP8 PUSH1 0x2 SLOAD PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x2 SSTORE CALLER DUP9 MSTORE PUSH1 0x8 DUP4 MSTORE DUP4 DUP9 KECCAK256 PUSH2 0xCE2 DUP4 DUP3 SLOAD PUSH2 0xEB3 JUMP JUMPDEST SWAP1 SSTORE DUP4 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP6 DUP7 SWAP2 DUP3 SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD SWAP1 JUMP JUMPDEST SUB DUP2 DUP9 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP4 DUP5 ISZERO PUSH2 0x453 JUMPI PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP4 SWAP5 PUSH2 0x843 JUMPI POP MLOAD SWAP3 DUP4 MSTORE CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x576974686472617720616D6F756E742065786365656473207374616B65640000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 PUSH1 0x64 SWAP3 MLOAD SWAP2 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x43616E6E6F74207769746864726177203 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDF4 CALLER PUSH2 0xF9B JUMP JUMPDEST CALLER DUP7 MSTORE PUSH1 0xA DUP5 MSTORE DUP3 DUP7 KECCAK256 SSTORE DUP1 SLOAD PUSH1 0x9 DUP5 MSTORE DUP3 DUP7 KECCAK256 SSTORE PUSH2 0xC9E JUMP JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP2 DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xE36 PUSH2 0xE6C JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0xA DUP5 MSTORE KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x167 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x231 PUSH2 0xE67 PUSH2 0xE6C JUMP JUMPDEST PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE82 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xE9B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xEC0 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0xEC0 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0xEF3 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xEC0 JUMPI JUMP JUMPDEST PUSH1 0x2 SLOAD DUP1 ISZERO DUP1 ISZERO PUSH2 0xF90 JUMPI JUMPDEST PUSH2 0xF89 JUMPI PUSH1 0x7 SLOAD DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0xF82 JUMPI JUMPDEST PUSH1 0x3 SLOAD DUP1 DUP3 GT ISZERO PUSH2 0xF79 JUMPI PUSH2 0xF76 SWAP3 PUSH2 0xF6B PUSH2 0xF62 PUSH2 0xF59 PUSH2 0xF70 SWAP5 PUSH1 0x4 SLOAD SWAP7 PUSH2 0xEB3 JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0xEE9 JUMP JUMPDEST SWAP1 PUSH2 0xF09 JUMP JUMPDEST SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP TIMESTAMP PUSH2 0xF34 JUMP JUMPDEST POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST POP PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0xF22 JUMP JUMPDEST PUSH2 0xF76 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH2 0xFE9 PUSH2 0xFE0 DUP4 DUP4 KECCAK256 SLOAD PUSH2 0xFDA PUSH2 0xFC8 PUSH2 0xF16 JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE DUP7 DUP7 KECCAK256 SLOAD SWAP1 PUSH2 0xEB3 JUMP JUMPDEST SWAP1 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0xEE9 JUMP JUMPDEST SWAP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE KECCAK256 SLOAD SWAP1 PUSH2 0xF09 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x101B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE82 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xE82 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 PUSH1 0x1 0xE6 0x1E DUP9 LOG3 PUSH13 0xDDB4175F27D23A7ED4FDF3CE66 SGT 0xD0 EQ 0xAA PUSH3 0x2D1213 0xA5 BLOCKHASH ADD PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0xAC STATICCALL ADDRESS LOG0 GAS 0xEF SWAP11 PUSH8 0xA07144128D467A9 0xE0 PUSH13 0xCE7EE4FBA2830A55D6B7F820 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "145:2317:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;145:2317:5;;;;;;;2388:8;145:2317;2380:23;;145:2317;;;2388:8;145:2317;;;;;-1:-1:-1;;;;;145:2317:5;;;-1:-1:-1;;145:2317:5;;;;;;;;;;;;;;;;-1:-1:-1;;;145:2317:5;;;;;;;;;;;;;;-1:-1:-1;;145:2317:5;;;;;;341:25;145:2317;341:25;;;;;;-1:-1:-1;145:2317:5;;;;;;-1:-1:-1;;;;;145:2317:5;;;;;;;;341:25;-1:-1:-1;341:25:5;;145:2317;;;;;;;;;;;;;1500:62:0;;:::i;:::-;145:2317:5;;-1:-1:-1;;;;;;145:2317:5;;;;;;-1:-1:-1;;;;;145:2317:5;3052:40:0;145:2317:5;;3052:40:0;145:2317:5;;;-1:-1:-1;;;;;145:2317:5;;;;;:::o;:::-;;;;;;-1:-1:-1;;145:2317:5;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;1361:180;145:2317;;;1500:62:0;;;:::i;:::-;-1:-1:-1;;;;;145:2317:5;;;;1441:90;;;;1036:77;1044:35;;;1036:77;:::i;:::-;1123:65;1131:19;;;1123:65;:::i;:::-;145:2317;;;;;1224:102;145:2317;;;;1224:102;;;145:2317;1224:102;;;;145:2317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1224:102;;;;;;;;;;;;;;:::i;:::-;145:2317;1214:113;;1391:36;;;;145:2317;1391:36;;;:::i;:::-;;;;;;145:2317;1391:36;;;145:2317;;1452:10;;;;145:2317;1441:90;;145:2317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1441:90;;;;;;;;;:::i;:::-;145:2317;;1361:180;;;145:2317;;1361:180;;145:2317;;;:::i;:::-;;;:::i;:::-;1361:180;;;;;;;;:::i;:::-;1581:182;;-1:-1:-1;1581:182:5;;;;;;145:2317;1773:26;;;;:::i;:::-;145:2317;;-1:-1:-1;;;;;145:2317:5;;;;1815:69;;145:2317;;1815:69;145:2317;;-1:-1:-1;;;;;145:2317:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;145:2317:5;;;;;;;;-1:-1:-1;;;;;145:2317:5;;;;;;;;;;;;;;-1:-1:-1;;145:2317:5;;;;;2111:8;145:2317;;;;;;;;;;;;;-1:-1:-1;;145:2317:5;;;;;;;;;:::i;:::-;1500:62:0;;:::i;:::-;-1:-1:-1;;;;;145:2317:5;;;2627:22:0;;2623:91;;3004:6;145:2317:5;;-1:-1:-1;;;;;;145:2317:5;;;;;;3004:6:0;;145:2317:5;3052:40:0;3004:6;;3052:40;145:2317:5;;2623:91:0;145:2317:5;;-1:-1:-1;;;2672:31:0;;-1:-1:-1;145:2317:5;2672:31:0;;145:2317:5;;;2672:31:0;1796:162;1710:6;145:2317:5;-1:-1:-1;;;;;145:2317:5;735:10:3;1855:23:0;1851:101;;1796:162::o;1851:101::-;145:2317:5;;-1:-1:-1;;;1901:40:0;;735:10:3;1901:40:0;;;145:2317:5;;;1901:40:0;145:2317:5;;;;:::o;:::-;;;-1:-1:-1;;;145:2317:5;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;145:2317:5;;;;;;;;;;;;;;;;;-1:-1:-1;;;145:2317:5;;;;;;;;;;;;;;;;;;;;;1224:102;;;145:2317;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;1773:8;145:2317;;;;;;;1773:8;145:2317;;;1773:8;145:2317;;;;;;1773:8;-1:-1:-1;145:2317:5;;;;;-1:-1:-1;;;;;;145:2317:5;-1:-1:-1;;;;;145:2317:5;;;;;;;;;:::o;:::-;;;;-1:-1:-1;145:2317:5;;;;;-1:-1:-1;145:2317:5"
            },
            "methodIdentifiers": {
              "allPools(uint256)": "41d1de97",
              "createPool(address,address,uint256,uint256,uint256)": "85ac165a",
              "getPool(uint256)": "068bcd8d",
              "getPoolCount()": "8eec5d70",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"poolAddress\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"rewardToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardRatePerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint256,uint256,uint256)\":{\"params\":{\"endTime\":\"The end time of the staking pool\",\"rewardRatePerSecond\":\"Reward rate per second for the pool\",\"stakingToken\":\"The address of the ERC20 token to be staked\",\"startTime\":\"The start time of the staking pool\"},\"returns\":{\"_0\":\"The address of the newly deployed staking pool\"}},\"getPool(uint256)\":{\"params\":{\"index\":\"The index of the pool in the array\"},\"returns\":{\"_0\":\"The address of the pool\"}},\"getPoolCount()\":{\"returns\":{\"_0\":\"The total number of deployed pools\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint256,uint256,uint256)\":{\"notice\":\"Deploys a new staking pool\"},\"getPool(uint256)\":{\"notice\":\"Returns the address of a pool at a given index\"},\"getPoolCount()\":{\"notice\":\"Returns the number of deployed pools\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SubnetStakingPoolFactory.sol\":\"SubnetStakingPoolFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SubnetStakingPool.sol\":{\"keccak256\":\"0x498c86ce1771990f91ddea97dabd90cd956c09a213f9b18782f18936d93834be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6abd6b05daebb4459c4da4daf53b1a336b43b978fd6dd52dfaad60e13a97de5c\",\"dweb:/ipfs/QmVHr9krcGi1NoT5niVPU5bq3n8WssjynrkKPKeUkKtYb4\"]},\"contracts/SubnetStakingPoolFactory.sol\":{\"keccak256\":\"0x2226d4d67ae5cea22af29e5c12ab3c245b9935969429a34063dc4025a90f948f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d2618700833137c2f9ad6bb69993add8f5a15c21b507ba81265ddc88e4e1b27\",\"dweb:/ipfs/QmYU5oHQKBUdCrb4aSG2Uhr5u1PKeQ58vguoSVFWRxtKxh\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 8,
                "contract": "contracts/SubnetStakingPoolFactory.sol:SubnetStakingPoolFactory",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 901,
                "contract": "contracts/SubnetStakingPoolFactory.sol:SubnetStakingPoolFactory",
                "label": "allPools",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
              }
            }
          }
        }
      }
    }
  }
}